#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef GXCOREUI_SWIFT_H
#define GXCOREUI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import GXCoreBL;
@import GXDataLayer;
@import GXFoundation;
@import GXObjectsModel;
@import GXStandardClasses;
@import MapKit;
@import ObjectiveC;
@import Photos;
@import PhotosUI;
@import SafariServices;
@import UIKit;
#endif

#import <GXCoreUI/GXCoreUI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GXCoreUI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)



@protocol GXActionHandler;
@protocol GXActionHandlerUserInterfaceControllerProtocol;
@protocol GXControllerPresentationHandlerProtocol;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI)) <GXActionHandlerUIDelegate>
- (id <GXActionHandlerUserInterfaceControllerProtocol> _Nullable)actionHandlerUserInterfaceController:(id <GXActionHandler> _Nonnull)actionHandler SWIFT_WARN_UNUSED_RESULT;
- (id <GXControllerPresentationHandlerProtocol> _Nullable)actionHandlerControllerPresentationHandler:(id <GXActionHandler> _Nonnull)actionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXActionHandlerUIContext;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI)) <GXActionUIHandler>
@property (nonatomic, readonly, strong) id <GXActionHandlerUIDelegate> _Nullable uiDelegate;
@property (nonatomic, readonly, strong) id <GXActionHandlerUIContext> _Nullable actionHandlerUIContext;
@end

@class GXUserInterfaceContext;
@class UIViewController;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI))
/// Convenience helper over self.actionHandlerUIContext?.actionHandlerUIContextSender?.actionSenderUserInterfaceContext
@property (nonatomic, readonly, strong) GXUserInterfaceContext * _Nullable userInterfaceContext;
/// Convenience helper over GXActionHandlerUIDelegate
@property (nonatomic, readonly, strong) id <GXActionHandlerUserInterfaceControllerProtocol> _Nullable gxActionHandlerUserInterfaceController;
/// Convenience helper over GXActionHandlerUIDelegate
@property (nonatomic, readonly, strong) id <GXControllerPresentationHandlerProtocol> _Nullable gxActionHandlerControllerPresentationHandler;
/// Finds an user interface controller from gxActionHandlerUserInterfaceController or userInterfaceContext. Consider using gxActionHandlerControllerPresentationHandler for presentation instead.
@property (nonatomic, readonly, strong) UIViewController * _Nullable gxActionHandlerUserInterfaceControllerFromContext;
/// Finds a gx root controller from gxActionHandlerUserInterfaceController or userInterfaceContext. Consider using gxActionHandlerControllerPresentationHandler or gxActionHandlerUserInterfaceControllerFromContext for presentation instead.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxActionHandlerRootControllerFromContext;
@end


@interface NSBundle (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nonnull gxBundle_CoreUI;)
+ (NSBundle * _Nonnull)gxBundle_CoreUI SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXActionExternalObjectDescriptor;
@class NSString;

SWIFT_CLASS("_TtC8GXCoreUI32GXActionExObjDesignSystemHandler")
@interface GXActionExObjDesignSystemHandler : GXActionExternalObjectHandler
+ (BOOL)handleActionExecutionUsingMethodHandlerSelectorNamePrefix SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) GXActionExternalObjectHandlerThreadRequirement actionExObjThreadRequirement;
- (void)gxActionExObjMethodHandler_SetOption:(NSArray * _Nonnull)parameters;
- (void)gxActionExObjMethodHandler_ClearOption:(NSArray * _Nonnull)parameters;
- (nonnull instancetype)initWithActionExObjDescriptor:(id <GXActionExternalObjectDescriptor> _Nonnull)actionExObjDesc componentActionsHandlers:(NSArray<id <GXActionHandler>> * _Nullable)componentActionsHandlers userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXActionExObjDynamicCallHandler")
@interface GXActionExObjDynamicCallHandler : GXActionExternalObjectHandler
+ (BOOL)handleActionExecutionUsingMethodHandlerSelectorNamePrefix SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) GXActionExternalObjectHandlerThreadRequirement actionExObjThreadRequirement;
- (void)gxActionExObjMethodHandler_SetOption:(NSArray * _Nonnull)parameters;
- (nonnull instancetype)initWithActionExObjDescriptor:(id <GXActionExternalObjectDescriptor> _Nonnull)actionExObjDesc componentActionsHandlers:(NSArray<id <GXActionHandler>> * _Nullable)componentActionsHandlers userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class GXStyleClass;
@protocol GXStyleClassPropertyDefaultResolver;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorView")
@protocol GXActivityIndicatorView <NSObject>
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
@end

@protocol GXActivityIndicatorViewWithMessage;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewProviderProtocol")
@protocol GXActivityIndicatorViewProviderProtocol <NSObject>
- (id <GXActivityIndicatorView> _Nonnull)activityIndicatorView SWIFT_WARN_UNUSED_RESULT;
@optional
- (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessage SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<GXStyleClassPropertyName> * _Nonnull animationThemeClassExtensionProperties;
@end


SWIFT_CLASS_NAMED("GXActivityIndicatorViewProvidersManager")
@interface GXActivityIndicatorViewProvidersManager : NSObject
+ (void)registerWithActivityIndicatorViewProvider:(id <GXActivityIndicatorViewProviderProtocol> _Nonnull)provider forIdentifier:(NSString * _Nonnull)identifier;
+ (id <GXActivityIndicatorView> _Nonnull)activityIndicatorViewForIdentifier:(NSString * _Nullable)identifier SWIFT_WARN_UNUSED_RESULT;
+ (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessageForIdentifier:(NSString * _Nullable)identifier SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWithMessage")
@protocol GXActivityIndicatorViewWithMessage <GXActivityIndicatorView>
@property (nonatomic, copy) NSString * _Nullable messageText;
@end


SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWithProgress")
@protocol GXActivityIndicatorViewWithProgress <GXActivityIndicatorView>
- (void)setProgress:(CGFloat)newProgress;
@end

enum GXActivityIndicatorViewWrappedLayoutStyle : NSInteger;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWrapped")
@protocol GXActivityIndicatorViewWrapped <GXActivityIndicatorView>
@optional
@property (nonatomic, readonly) UIRectEdge wrappedActivityIndicatorViewAllowedMessagePosition;
@property (nonatomic, readonly) UIRectEdge wrappedActivityIndicatorViewPreferredMessagePosition;
@property (nonatomic, readonly) enum GXActivityIndicatorViewWrappedLayoutStyle wrappedActivityIndicatorViewLayoutStyle;
@end

typedef SWIFT_ENUM(NSInteger, GXActivityIndicatorViewWrappedLayoutStyle, open) {
  GXActivityIndicatorViewWrappedLayoutStyleCenterMessage = 0,
  GXActivityIndicatorViewWrappedLayoutStyleCenterActivityIndicatorViewMessage = 1,
};

@class NSCoder;

SWIFT_CLASS("_TtC8GXCoreUI41GXActivityIndicatorViewWrapperWithMessage")
@interface GXActivityIndicatorViewWrapperWithMessage : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface GXActivityIndicatorViewWrapperWithMessage (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorViewWithMessage>
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver withFlags:(UIViewThemeFlags)flags;
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, copy) NSString * _Nullable messageText;
@end

@protocol GXModelObject;
@class UITraitCollection;
@class UIImage;

SWIFT_CLASS("_TtC8GXCoreUI30GXApplicationBarTitleImageView")
@interface GXApplicationBarTitleImageView : UIImageView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, weak) id <GXModelObject> _Nullable gxModelObject;
@property (nonatomic, readonly, copy) NSString * _Nonnull gxImageName;
- (void)setGxImageName:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
- (void)sizeToFit;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8GXCoreUI25GXCodeScannerSoundManager")
@interface GXCodeScannerSoundManager : NSObject
- (void)beep;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GXCodeScannerViewDelegate;
@class UITapGestureRecognizer;

SWIFT_CLASS("_TtC8GXCoreUI17GXCodeScannerView")
@interface GXCodeScannerView : UIView
@property (nonatomic, weak) id <GXCodeScannerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
+ (NSError * _Nullable)isUnavailableError SWIFT_WARN_UNUSED_RESULT;
- (void)beginScanningWithScannerBarcodeTypes:(NSArray<NSString *> * _Nonnull)scannerBarcodeTypes;
- (void)endScanning;
- (void)updatePreviewLayerOriantation:(UIInterfaceOrientation)oriantation;
- (void)tapToFocus:(UITapGestureRecognizer * _Nonnull)singleTap;
@end

@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface GXCodeScannerView (SWIFT_EXTENSION(GXCoreUI)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


SWIFT_PROTOCOL("_TtP8GXCoreUI25GXCodeScannerViewDelegate_")
@protocol GXCodeScannerViewDelegate <NSObject>
- (void)codeScannerView:(GXCodeScannerView * _Nonnull)scannerView didReadCode:(NSString * _Nonnull)code;
@end

@protocol GXControlGridItemDelegate;
@class GXControlTableGridItem;
@class NSIndexPath;
@class UICollectionViewLayoutAttributes;

SWIFT_CLASS("_TtC8GXCoreUI30GXCollectionViewCellEntityData")
@interface GXCollectionViewCellEntityData : UICollectionViewCell <GXControlGridItem>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
- (void)prepareForReuse;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
@property (nonatomic, weak) id <GXControlGridItemDelegate> _Nullable gridItemDelegate;
@property (nonatomic, readonly, strong) UIView * _Nonnull gridItemView;
@property (nonatomic, readonly, strong) GXControlTableGridItem * _Nullable gridItemTable;
@property (nonatomic, strong) GXStyleClass * _Nullable gridItemStyleClass;
@property (nonatomic) CGSize gridItemRelativeSizeForPercentDimension;
@property (nonatomic) BOOL gridItemSelected;
- (void)setGridItemSelected:(BOOL)selected animated:(BOOL)animated;
@property (nonatomic, readonly) GXHighlightStyleType gridItemHighlightStyle;
@property (nonatomic) GXControlGridItemHighlightStyleModifierFlags gridItemHighlightStyleModifiers;
@property (nonatomic, readonly, copy) NSIndexPath * _Nullable gxItemIndexPath;
- (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes;
@end


@interface GXCollectionViewCellEntityData (SWIFT_EXTENSION(GXCoreUI)) <GXControlGridCollectionTableViewCellEntityData>
- (void)initializeWithGridItemTable:(GXControlTableGridItem * _Nonnull)gridItemTable relativeSizeForPercentDimension:(CGSize)relativeSizeForPercentDimension;
@end


SWIFT_PROTOCOL_NAMED("GXCollectionViewFlowLayout")
@protocol GXCollectionViewFlowLayout
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
/// Called from styleClass:defaultPropertyValueForpropertyName: when styleClass is not GXThemeClass
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nullable)styleClassPropertyDefaultResolverForStyleClass:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
- (void)scrollIntoView:(NSArray * _Nonnull)parameters;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
/// Called after GXDesignSystemTokenOptionChangedNotification and calls onDesignSystemTokenOptionChanged() if true is returned
/// Default implementation returns true if self.styleClass is a design system class with token references, false otherwise
@property (nonatomic, readonly) BOOL hasDesignSystemTokenReference;
/// Called after GXDesignSystemTokenOptionChangedNotification if hasDesignSystemTokenReference() returns true
/// Default implementation resets the style class
- (void)onDesignSystemTokenOptionChanged;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI)) <GXStyleClassPropertyDefaultResolver>
- (id _Nullable)styleClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id <GXModelObject> _Nullable styleClassPropertyDefaultResolverModelObject;
@end

@protocol GXControlRuntimePropertiesProxy;
@protocol GXEntityDataWithOverrideValues;
@protocol GXDynamicPropertyOverrideUserInterfaceContext;

SWIFT_CLASS_NAMED("GXControlBaseRuntimePropertiesProxyWrapper")
@interface GXControlBaseRuntimePropertiesProxyWrapper : NSObject <GXControlBaseRuntimeProperties, GXNamedControlElement>
- (nonnull instancetype)init:(id <GXControlRuntimePropertiesProxy> _Nonnull)proxy controlName:(NSString * _Nonnull)controlName userInterfaceContext:(GXUserInterfaceContext * _Nullable)uiContext contextEntityData:(id <GXEntityDataWithOverrideValues> _Nullable)contextEntityData OBJC_DESIGNATED_INITIALIZER;
- (id <GXDynamicPropertyOverrideUserInterfaceContext> _Nullable)addUserInterfaceContexWithDynamicPropertyOverrideName:(NSString * _Nonnull)lowercasePropName;
@property (nonatomic, readonly, copy) NSString * _Nonnull controlName;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (void)setProperty:(NSString * _Nonnull)propertyName value:(id _Nullable)propertyValue;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters entityData:(id <GXEntityDataWithOverrideValues> _Nullable)entityData SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters entityData:(id <GXEntityDataWithOverrideValues> _Nullable)entityData userInterfaceContext:(GXUserInterfaceContext * _Nullable)uiContext SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol GXLayoutElementData;
@protocol GXEntityDataFieldDescriptor;
@class NSNumber;
@protocol GXControlContainer;

SWIFT_CLASS_NAMED("GXControlDrawing")
@interface GXControlDrawing : GXControlImage
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL readOnly;
- (BOOL)applyPropertyValue:(id _Nullable)propValue toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (void)loadContentViewsWithContentFrame:(CGRect)contentFrame intoContainerView:(UIView * _Nonnull)containerView;
- (void)layoutContentViewsWithContentFrame:(CGRect)contentFrame;
@end


@interface GXControlDrawing (SWIFT_EXTENSION(GXCoreUI))
- (Class _Nonnull)reuseContextClass SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuseViews;
- (void)endPrepareForReuseViews;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlDrawingReuseContext")
@interface GXControlDrawingReuseContext : GXControlEditableWithLabelBaseReuseContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;
@class UIEvent;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC8GXCoreUI20GXControlDrawingView")
@interface GXControlDrawingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXControl;

@interface GXControlFactory (SWIFT_EXTENSION(GXCoreUI))
/// Registers the given control class for the given user control type
/// \param controlClass Control class, must conform to GXControl.
///
/// \param userControlType Case sensitive user control type.
///
+ (void)registerControlClass:(Class <GXControl> _Nonnull)controlClass forUserControlType:(NSString * _Nonnull)userControlType;
@end


@interface GXControlFactory (SWIFT_EXTENSION(GXCoreUI)) <GXControlModelService>
+ (NSDictionary<NSString *, id> * _Nullable)transformControl:(NSString * _Nonnull)userControlType customPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nullable)customProperties SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nullable)transformControlType:(NSString * _Nonnull)controlType customPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nullable)customProperties SWIFT_WARN_UNUSED_RESULT;
@end




@interface GXControlGridBase (SWIFT_EXTENSION(GXCoreUI))
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)groupSeparatorStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)horizontalStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDelegateFlowLayout>
@end

@class UICollectionView;

@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDataSource>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)indexTitlesForCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSIndexPath * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForIndexTitle:(NSString * _Nonnull)title atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionViewLayout;
@class UIScrollView;
@protocol GXControlGridCollectionTableView;

@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) UICollectionView * _Nullable gridCollectionView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newGridViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)makeGridViewReloadDelegateSelectors:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (Class _Nonnull)classForCellEntityDataWithReuseIdentifier:(NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (void)onRelativeSizeForItemWithPercentDimensionChanged:(CGSize)oldRelativeSizeForItemWithPercentDimension;
@end


@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDelegate>
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
@property (nonatomic, readonly) CGFloat defaultGridItemHeight;
@property (nonatomic, readonly) CGSize defaultGridItemSize;
@end


SWIFT_CLASS("_TtC8GXCoreUI45GXControlGridCollectionViewBaseCollectionView")
@interface GXControlGridCollectionViewBaseCollectionView : UICollectionView
@property (nonatomic) CGRect bounds;
@property (nonatomic) CGRect frame;
@property (nonatomic) UIEdgeInsets contentInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI37GXControlGridCollectionViewFlowLayout")
@interface GXControlGridCollectionViewFlowLayout : UICollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXLayoutElement;
@class GXStyleKBObject;
@protocol GXControlBaseProperties;

@interface GXControlHelpers (SWIFT_EXTENSION(GXCoreUI))
+ (GXStyleClass * _Nullable)currentStyleClassFromControlLayoutElement:(id <GXControl> _Nonnull)control SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)currentStyleClassFromLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFromControlLayoutElement:(id <GXControl> _Nonnull)control styleObject:(GXStyleKBObject * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFromLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement styleObject:(GXStyleKBObject * _Nullable)styleObject SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFrom:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver forDragDropState:(GXDragDropState)state SWIFT_WARN_UNUSED_RESULT;
+ (id <GXStyleClassPropertyDefaultResolver> _Nullable)styleClassPropertyDefaultResolverForStyleClass:(GXStyleClass * _Nullable)styleClass control:(id <GXControlBaseProperties> _Nullable)control SWIFT_WARN_UNUSED_RESULT;
@end

@class UIPickerView;
@protocol GXInlinePickerView;

SWIFT_CLASS("_TtC8GXCoreUI30GXControlMulticolumnWheelLabel")
@interface GXControlMulticolumnWheelLabel : GXEditorLabelWithPlaceholderAndInputViewBase <UIPickerViewDataSource, UIPickerViewDelegate>
@property (nonatomic, strong) UIPickerView * _Nullable picker;
@property (nonatomic, readonly, strong) UIView <GXInlinePickerView> * _Nullable inlinePicker;
- (UIPickerView * _Nullable)createPickerIfNeeded SWIFT_WARN_UNUSED_RESULT;
- (void)updateGXControlValueFromPicker;
- (void)loadPickerValueFromGXControl;
- (void)cleanPicker;
- (UIView * _Nonnull)setupInputView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GXEntityDataDescriptor;
@class GXBusinessComponentLevel;
@protocol GXControlView;
@protocol GXControlGridCollectionTableViewCell;

SWIFT_CLASS_NAMED("GXControlPagedGrid")
@interface GXControlPagedGrid : GXControlGridCollectionViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement dataDescriptor:(id <GXEntityDataDescriptor> _Nonnull)dataDescriptor businessComponentLevel:(GXBusinessComponentLevel * _Nullable)businessComponentLevel controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nullable)parentControl relations:(NSDictionary * _Nullable)relationsByDataElementName OBJC_DESIGNATED_INITIALIZER;
- (void)unloadView;
- (void)onControlFrameChanged:(CGRect)oldControlFrame;
- (GXLayoutQuadDimension)contentRequiredEdgeInsetsToViewFrame SWIFT_WARN_UNUSED_RESULT;
- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation duration:(NSTimeInterval)duration;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (BOOL)applyPropertyValue:(id _Nullable)propValue toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newGridViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (UIView <GXControlView> * _Nonnull)newMainViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)layoutControls;
@property (nonatomic, readonly) BOOL gxControlTableGridItemAutoGrow;
@property (nonatomic, readonly) BOOL gridShouldAutoLoadOnLastCellVisible;
@property (nonatomic, readonly) BOOL gridViewHandlesContentInsets;
@property (nonatomic, readonly) BOOL gridSupportsExpandableBounds;
- (void)reloadData:(NSDictionary<NSString *, id> * _Nullable)loadInfo;
- (Class _Nonnull)classForCellEntityDataWithReuseIdentifier:(NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (void)updateGridViewDefaultItemSize:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger layoutElementRowsPerPagePortrait;
@property (nonatomic, readonly) NSUInteger layoutElementRowsPerPageLandscape;
@property (nonatomic, readonly) NSUInteger layoutElementColumnsPerPagePortrait;
@property (nonatomic, readonly) NSUInteger layoutElementColumnsPerPageLandscape;
@property (nonatomic, readonly) BOOL layoutElementShowPageControl;
- (void)pageControlDidChangeWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)reloadPendingReloadIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)vReloadIndexPaths;
- (UIView <GXControlGridCollectionTableViewCell> * _Nonnull)gridView:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) GXScrollIndicatorsVisibility resolvedScrollIndicatorsVisibilityDefault;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
- (CGFloat)gridItemWidthForHeightCalculationOfEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered layoutName:(NSString * _Nullable)layoutName context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeWidthForItemWithPercentWidth:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeHeightForItemWithPercentHeight:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
+ (Class _Nonnull)loadedInfoClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
- (Class _Nonnull)reuseContextClass SWIFT_WARN_UNUSED_RESULT;
- (void)endPrepareForReuseViews;
@end

@protocol GXControlAutoHeightDelegate;

@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI)) <GXControlAutoHeight>
@property (nonatomic, weak) id <GXControlAutoHeightDelegate> _Nullable autoHeightDelegate;
- (CGFloat)additionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasAutoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (GXControlAutoHeightDependencyFlags)autoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)setFrameWithAdditionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI32GXControlPagedGridCollectionView")
@interface GXControlPagedGridCollectionView : GXControlGridCollectionViewBaseCollectionView
- (void)gxScrollToItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath atScrollPosition:(GXControlGridCollectionTableViewScrollPosition)scrollPosition animated:(BOOL)animated;
- (void)adjustedContentInsetDidChange SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI46GXControlPagedGridCollectionViewCellEntityData")
@interface GXControlPagedGridCollectionViewCellEntityData : GXCollectionViewCellEntityData
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlPagedGridFlowLayout")
@interface GXControlPagedGridFlowLayout : GXControlGridCollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
@end

@class GXControlGridItemHeightLoadedInfo;

SWIFT_CLASS("_TtC8GXCoreUI28GXControlPagedGridLoadedInfo")
@interface GXControlPagedGridLoadedInfo : GXControlGridBaseLoadedInfo
- (void)willRemoveLoadedSectionsCountInRange:(NSRange)rangeToRemove;
- (void)setNumberOfLoadedItemsWithoutSupplementaryElements:(NSUInteger)itemsCount inSection:(NSUInteger)section;
@property (nonatomic, readonly) BOOL itemHeightsLoadedInfoDelegateRequired;
- (void)controlGridItemHeightLoadedInfo:(GXControlGridItemHeightLoadedInfo * _Nonnull)itemHeights didChangeItemHeight:(CGFloat)oldItemHeight withNewItemHeight:(CGFloat)newItemHeight atIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI30GXControlPagedGridReuseContext")
@interface GXControlPagedGridReuseContext : GXControlGridBaseReuseContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXControlRadioButton")
@interface GXControlRadioButton : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)loadEntityDataFieldValue;
- (void)onReadOnlyChanged;
- (void)onEnabledChanged;
- (CGRect)editorViewFrameForEditorFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (void)applyStyleClass;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (void)valueChanged:(id _Nonnull)_;
@end


SWIFT_CLASS_NAMED("GXControlScannerInline")
@interface GXControlScannerInline : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)loadEntityDataFieldValue;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)onVisibleChanged;
@end


@interface GXControlScannerInline (SWIFT_EXTENSION(GXCoreUI)) <GXCodeScannerViewDelegate>
- (void)codeScannerView:(GXCodeScannerView * _Nonnull)scannerView didReadCode:(NSString * _Nonnull)code;
@end


SWIFT_CLASS_NAMED("GXControlSmartGrid")
@interface GXControlSmartGrid : GXControlGridCollectionViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement dataDescriptor:(id <GXEntityDataDescriptor> _Nonnull)dataDescriptor businessComponentLevel:(GXBusinessComponentLevel * _Nullable)businessComponentLevel controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nullable)parentControl relations:(NSDictionary * _Nullable)relationsByDataElementName OBJC_DESIGNATED_INITIALIZER;
- (BOOL)respondsToSelector:(SEL _Null_unspecified)aSelector SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL gridViewHandlesContentInsets;
@property (nonatomic, readonly) BOOL gridSupportsExpandableBounds;
@property (nonatomic, readonly) BOOL gxControlTableGridItemAutoGrow;
@property (nonatomic, readonly) BOOL gxControlTableGridItemPercentDimensionAs100;
- (void)updateGridViewDefaultItemSize:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class GXControlGridItemHeightCalculationHelper;

@interface GXControlSmartGrid (SWIFT_EXTENSION(GXCoreUI))
- (BOOL)shouldCalculateDynamicHeightForEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)gridItemHeightForHeightCalculation:(BOOL)calculateDynamicHeight ofEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)gridItemWidthForHeightCalculationOfEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered layoutName:(NSString * _Nullable)layoutName context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGSize)gridItemSizeForHeightCalculation:(BOOL)calculateDynamicHeight ofEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeWidthForItemWithPercentWidth:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeHeightForItemWithPercentHeight:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGSize)gridItemSizeForEntityDataAtIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context canIgnoreWidth:(BOOL)canIgnoreWidth SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI32GXControlSmartGridCollectionView")
@interface GXControlSmartGridCollectionView : GXControlGridCollectionViewBaseCollectionView
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlSmartGridFlowLayout")
@interface GXControlSmartGridFlowLayout : GXControlGridCollectionViewFlowLayout
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layoutAttributesClass;)
+ (Class _Nonnull)layoutAttributesClass SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI34GXControlSmartGridLayoutAttributes")
@interface GXControlSmartGridLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GXControlSmartGridMultipleItems, open) {
  GXControlSmartGridMultipleItemsSingle = 0,
  GXControlSmartGridMultipleItemsMultipleByQuantity = 1,
  GXControlSmartGridMultipleItemsStaggeredByQuantity = 2,
  GXControlSmartGridMultipleItemsMultipleBySize = 3,
};

@protocol GXLayoutElementGrid;
enum GXControlSmartGridScrollDirection : NSInteger;

SWIFT_CLASS_NAMED("GXControlSmartGridPropertiesHelper")
@interface GXControlSmartGridPropertiesHelper : NSObject
@property (nonatomic, readonly, strong) id <GXLayoutElementGrid> _Nonnull layoutElement;
- (nullable instancetype)initWithLayoutElementMaybeSmartGrid:(id <GXLayoutElementGrid> _Nullable)layoutElement;
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementGrid> _Nonnull)layoutElement OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) enum GXControlSmartGridScrollDirection scrollDirection;
@property (nonatomic) enum GXControlSmartGridMultipleItems multipleItems;
@property (nonatomic) NSUInteger itemsByQuantityPerRowColumn;
@property (nonatomic) CGFloat itemBySizeMinWidthHeight;
@property (nonatomic) CGFloat itemBySizeMaxWidthHeight;
@property (nonatomic) BOOL scrollReverse;
@property (nonatomic) BOOL snapToGrid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GXControlSmartGridScrollDirection, open) {
  GXControlSmartGridScrollDirectionVertical = 0,
  GXControlSmartGridScrollDirectionHorizontal = 1,
};


SWIFT_CLASS("_TtC8GXCoreUI33GXControlSmartGridStaggeredLayout")
@interface GXControlSmartGridStaggeredLayout : UICollectionViewLayout
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
- (void)prepareLayout;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UISwitch;

SWIFT_CLASS("_TtC8GXCoreUI15GXControlSwitch")
@interface GXControlSwitch : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (void)loadEntityDataFieldValue;
- (void)onReadOnlyChanged;
- (void)onEnabledChanged;
- (CGRect)editorViewFrameForEditorFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (void)layoutEditorViewsWithEditorFrame:(CGRect)editorFrame;
- (void)applyStyleClass;
- (void)unloadView;
- (CGFloat)additionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasAutoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (GXControlAutoHeightDependencyFlags)autoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (void)onSwitchValueChanged:(UISwitch * _Nonnull)switchView;
@end

typedef SWIFT_ENUM(NSInteger, GXControlVideoPlayInFullScreenType, closed) {
  GXControlVideoPlayInFullScreenTypePlatformDefault = 0,
  GXControlVideoPlayInFullScreenTypeYes = 1,
  GXControlVideoPlayInFullScreenTypeNo = 2,
};

enum GXControlVideoShowPlaybackControlsType : NSInteger;

SWIFT_CLASS("_TtC8GXCoreUI24GXControlVideoProperties")
@interface GXControlVideoProperties : NSObject
@property (nonatomic) enum GXControlVideoShowPlaybackControlsType showPlaybackControls;
@property (nonatomic) NSInteger playbackRate;
@property (nonatomic) BOOL autoplay;
@property (nonatomic) enum GXControlVideoPlayInFullScreenType playInFullScreen;
@property (nonatomic, readonly) BOOL resolvedPlayInFullScreen;
@property (nonatomic, readonly, copy) NSString * _Nullable placeholderImageRef;
@property (nonatomic, readonly, copy) NSString * _Nullable thumbnailAtt;
@property (nonatomic, readonly, copy) NSString * _Nullable thumbnailFieldSpecifier;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithLayoutElementData:(id <GXLayoutElementData> _Nonnull)layoutElementData OBJC_DESIGNATED_INITIALIZER;
- (BOOL)applyPropertyValue:(id _Nullable)value toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuse;
- (void)endPrepareForReuse;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

typedef SWIFT_ENUM(NSInteger, GXControlVideoShowPlaybackControlsType, closed) {
  GXControlVideoShowPlaybackControlsTypeOnInteraction = 0,
  GXControlVideoShowPlaybackControlsTypeNever = 1,
};



SWIFT_CLASS("_TtC8GXCoreUI35GXControlWithExpandableBoundsHelper")
@interface GXControlWithExpandableBoundsHelper : NSObject
+ (UIEdgeInsets)validExpandableWithEdgeInsets:(UIEdgeInsets)edgeInsets forExpandDirections:(GXLayoutExpandDirection)expandDirection SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)validExpandableWithEdgeInsets:(UIEdgeInsets)edgeInsets forExpandDirectionsResolver:(GXLayoutExpandDirection (^ _Nonnull)(void))expandDirectionResolver SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBounds:(CGRect)contentBounds withInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdges:(UIEdgeInsets)contentEdges withInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBounds:(CGRect)contentBounds withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdges:(UIEdgeInsets)contentEdges withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBoundsButBottom:(CGRect)contentBounds withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdgesButBottom:(UIEdgeInsets)contentEdges withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXControlWithLabelBase (SWIFT_EXTENSION(GXCoreUI))
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)labelStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXEventDescriptor;
@protocol GXControllerProtocol;

SWIFT_CLASS("_TtC8GXCoreUI18GXControllerHelper")
@interface GXControllerHelper : NSObject
+ (GXControllerBackEventType)backEventType:(id <GXEventDescriptor> _Nullable)backEvent SWIFT_WARN_UNUSED_RESULT;
+ (void)updateGXControllerReturnState:(id <GXControllerProtocol> _Nonnull)controller;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GXDesignSystemTokenValue;

SWIFT_CLASS("_TtC8GXCoreUI44GXCoreUIDesignSystemStyleClassPropertyLoader")
@interface GXCoreUIDesignSystemStyleClassPropertyLoader : NSObject <GXDesignSystemStyleClassPropertyLoader>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXCoreUIDesignSystemStyleClassPropertyLoader * _Nonnull shared;)
+ (GXCoreUIDesignSystemStyleClassPropertyLoader * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<GXStyleClassPropertyName, id> * _Nullable)loadStyleClassPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nonnull)metadata SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)convertDesignSystemTokenValue:(GXDesignSystemTokenValue * _Nonnull)value forProperty:(GXStyleClassPropertyName _Nonnull)property SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSSet<GXStyleClassPropertyName> * _Nullable convertibleStyleClassPropertyNames;
@end

@class UIApplication;
@class NSURL;

SWIFT_CLASS("_TtC8GXCoreUI35GXDeepLinkApplicationOpenURLHandler")
@interface GXDeepLinkApplicationOpenURLHandler : NSObject <GXApplicationOpenURLHandler>
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=9.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI38GXDefaultActivityIndicatorViewProvider")
@interface GXDefaultActivityIndicatorViewProvider : NSObject <GXActivityIndicatorViewProviderProtocol>
- (id <GXActivityIndicatorView> _Nonnull)activityIndicatorView SWIFT_WARN_UNUSED_RESULT;
- (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum GXColorSchemeType : NSInteger;

SWIFT_CLASS_NAMED("GXEOAppearance")
@interface GXEOAppearance : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
+ (enum GXColorSchemeType)preferredColorSchemeEnumForModelObject:(id <GXModelObject> _Nonnull)modelObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, GXColorSchemeType, "ColorScheme", closed) {
  GXColorSchemeTypeUnspecified = 0,
  GXColorSchemeTypeLight = 1,
  GXColorSchemeTypeDark = 2,
};


@interface GXEOAppearance (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) NSInteger preferredColorScheme;
@end


SWIFT_CLASS_NAMED("GXEODeepLink")
@interface GXEODeepLink : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXEODesignSystem")
@interface GXEODesignSystem : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXEODesignSystem (SWIFT_EXTENSION(GXCoreUI))
+ (void)setOption:(NSString * _Nonnull)name :(NSString * _Nonnull)value;
+ (void)clearOption:(NSString * _Nonnull)name;
@end


SWIFT_CLASS_NAMED("GXEODynamicCall")
@interface GXEODynamicCall : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
+ (void)setOption:(NSString * _Nonnull)objectNameOrLink :(NSString * _Nonnull)callOption :(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureInput;
@class AVCaptureDevice;

SWIFT_PROTOCOL("_TtP8GXCoreUI33GXEOiOSPermissionsCameraOptionals_") SWIFT_AVAILABILITY(maccatalyst,introduced=14.0)
@protocol GXEOiOSPermissionsCameraOptionals
@optional
/// Return device property if the given input is AVCaptureDeviceInput
+ (AVCaptureDevice * _Nullable)captureDeviceFromInput:(AVCaptureInput * _Nonnull)input SWIFT_WARN_UNUSED_RESULT;
/// Return device property if the given input is AVCaptureDeviceInput
+ (AVCaptureInput * _Nullable)newCaptureDeviceInputWithDevice:(AVCaptureDevice * _Nonnull)captureDevice SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP8GXCoreUI39GXEOiOSPermissionsPhotoLibraryOptionals_")
@protocol GXEOiOSPermissionsPhotoLibraryOptionals
@optional
/// Calls PHPhotoLibrary requestAuthorization with the given handler
+ (void)requestPhotoLibraryAuthorization:(void (^ _Nonnull)(PHAuthorizationStatus))handler;
@end

@class GXPresentationContext;

SWIFT_PROTOCOL("_TtP8GXCoreUI36GXEntityDataFieldImagePickerProtocol_")
@protocol GXEntityDataFieldImagePickerProtocol <GXEntityDataFieldEditorViewController>
@property (nonatomic) BOOL fieldImagePickerAllowsNull;
- (GXPresentationContext * _Nonnull)newPresentationContextForUserInterfaceContext:(GXUserInterfaceContext * _Nullable)userInterfaceContext SWIFT_WARN_UNUSED_RESULT;
- (void)updatePresentationContext:(GXPresentationContext * _Nonnull)presentationContext;
@end

@class UIPinchGestureRecognizer;

SWIFT_CLASS_NAMED("GXFullScreenZoomImageView")
@interface GXFullScreenZoomImageView : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXFullScreenZoomImageView * _Nonnull sharedInstance;)
+ (GXFullScreenZoomImageView * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)handleFullScreenZoomOfImageView:(UIImageView * _Nonnull)imageView withGesture:(UIPinchGestureRecognizer * _Nonnull)gesture withMaxZoomScaleOf:(CGFloat)maxZoomScale;
@end

@class GXImage;

SWIFT_CLASS("_TtC8GXCoreUI15GXImageObserver")
@interface GXImageObserver : NSObject
@property (nonatomic, readonly, strong) GXImage * _Nonnull image;
- (nonnull instancetype)initWithImage:(GXImage * _Nonnull)image OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) void (^ _Nullable reloadHandler)(GXImageObserver * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GXImageObserver (SWIFT_EXTENSION(GXCoreUI))
- (void)performIgnoringImageKeyPathChanges:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actions;
+ (void)performIgnoringImageKeyPathChangesOfObserver:(GXImageObserver * _Nullable)observer actions:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actions;
@end

@protocol GXWebViewController;
@class SFSafariViewController;

SWIFT_CLASS("_TtC8GXCoreUI20GXInAppBrowserHelper")
@interface GXInAppBrowserHelper : NSObject <SFSafariViewControllerDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXInAppBrowserHelper * _Nonnull sharedInstance;)
+ (GXInAppBrowserHelper * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)openWithUrl:(NSURL * _Nullable)url fromHandler:(GXActionHandler * _Nullable)handler completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)openWithUrl:(NSURL * _Nullable)url fromControl:(id <GXControl> _Nullable)control setupBlock:(void (^ _Nullable)(UIViewController <GXWebViewController> * _Nonnull))setupBlock completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)closeFromHandler:(GXActionHandler * _Nullable)handler completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (void)safariViewControllerDidFinish:(SFSafariViewController * _Nonnull)controller;
@end

@class CLLocation;
@protocol MKAnnotation;
@class MKAnnotationView;

@interface GXMKMapView (SWIFT_EXTENSION(GXCoreUI)) <GXMapView>
@property (nonatomic) CGRect frame;
@property (nonatomic, readonly, strong) NSNumber * _Nullable gxMinZoomLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable gxMaxZoomLevel;
- (void)gxSetMinZoomLevel:(float)minZoomLevel;
- (void)gxSetMaxZoomLevel:(float)maxZoomLevel;
- (void)gxClear;
- (void)gxClear:(BOOL)removeAll;
- (CLLocation * _Nullable)gxUserLocation SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <MKAnnotation>> * _Nonnull)gxAnnotations SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <MKAnnotation>> * _Nonnull)gxSelectedAnnotations SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)gxRegionCenter SWIFT_WARN_UNUSED_RESULT;
- (CLLocationDegrees)gxLongitudeDelta SWIFT_WARN_UNUSED_RESULT;
- (CLLocationDegrees)gxLatitudeDelta SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gxIsScrollEnabled SWIFT_WARN_UNUSED_RESULT;
- (void)gxAddAnnotation:(id <MKAnnotation> _Nonnull)annotation SWIFT_DEPRECATED_MSG("", "gxAddAnnotation:isPersistent:");
/// #deprecated: 2022-06-29: trunk; #to-remove: ??
- (void)gxAddAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations SWIFT_DEPRECATED_MSG("", "gxAddAnnotations:arePersistent:");
- (void)gxAddAnnotation:(id <MKAnnotation> _Nonnull)annotation isPersistent:(BOOL)isPersistent;
- (void)gxAddAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations arePersistent:(BOOL)arePersistent;
- (void)gxRemoveAnnotation:(id <MKAnnotation> _Nonnull)annotation;
- (void)gxRemoveAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations;
- (void)gxShowAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations animated:(BOOL)animated;
- (void)gxDeselectAnnotation:(id <MKAnnotation> _Nullable)annotation animated:(BOOL)animated;
- (void)gxDeselectAnnotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(BOOL)animated;
- (void)gxSetShowsUserLocation:(BOOL)showLocation;
- (void)gxSelectAnnotation:(id <MKAnnotation> _Nonnull)annotation animated:(BOOL)animated;
- (void)gxSelectAnnotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(BOOL)animated;
- (MKAnnotationView * _Nullable)gxViewForAnnotation:(id <MKAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (void)gxSetGXMapType:(GXMapType)gxMapType;
@property (nonatomic, readonly) CGPoint gxMapViewCenter;
- (void)gxSetCenterCoordinate:(CLLocationCoordinate2D)newCenterCoordinate animated:(BOOL)animated;
- (void)gxSetCenterCoordinate:(CLLocationCoordinate2D)newCenterCoordinate withZoomLevel:(float)zoomLevel animated:(BOOL)animated;
- (void)gxSetZoomLevel:(float)zoomLevel animated:(BOOL)animated;
- (float)gxZoomLevel SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)gxConvertPoint:(CGPoint)point toCoordinateFromView:(UIView * _Nonnull)mapView SWIFT_WARN_UNUSED_RESULT;
- (MKMapRect)gxVisibleMapRect SWIFT_WARN_UNUSED_RESULT;
- (void)gxSetVisibleMapRect:(MKMapRect)mapRect edgePadding:(UIEdgeInsets)adjustedMapViewEdgePadding animated:(BOOL)animated;
- (void)gxClearPolylines;
- (id <MKAnnotation> _Nullable)annotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXMessageView (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorViewWithMessage>
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, copy) NSString * _Nullable messageText;
@end

@class GXWheelValue;
@class GXControlEditableWithLabelBase;
@class GXEntityDataFieldViewControllerHelper;

SWIFT_CLASS("_TtC8GXCoreUI32GXMulticolumnWheelValuesProvider")
@interface GXMulticolumnWheelValuesProvider : NSObject
@property (nonatomic, copy) NSArray<GXWheelValue *> * _Nullable values;
@property (nonatomic, readonly) NSInteger numberOfComponents;
@property (nonatomic, readonly) BOOL hasValues;
@property (nonatomic, readonly, copy) NSString * _Nonnull selectedValueDescription;
- (NSInteger)numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)valueForRow:(NSInteger)row inComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)selectValueAtRow:(NSInteger)row forComponent:(NSInteger)component;
- (void)updateValuesFromControl:(GXControlEditableWithLabelBase * _Nonnull)gxControl;
- (void)updateValuesFromHelper:(GXEntityDataFieldViewControllerHelper * _Nonnull)helper;
- (void)enumerateSelectedRowsInComponents:(SWIFT_NOESCAPE void (^ _Nonnull)(NSInteger, NSInteger))block;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXPresentationContext (SWIFT_EXTENSION(GXCoreUI))
/// Finds a gx root controller from its presentingController if not nil, or from uiContext otherwise.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end


@interface GXRootControllerHelper (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXRootControllerInstanceRef _Nullable currentRootController SWIFT_DEPRECATED_MSG("Use UIViewController.gxRootController, GXUserInterfaceContext.gxRootController, GXPresentationContext.gxRootController and GXExecutionEnvironmentHelper instead");)
+ (GXRootControllerInstanceRef _Nullable)currentRootController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI18GXSegmentedControl")
@interface GXSegmentedControl : UISegmentedControl
@property (nonatomic) BOOL useDefaultCornerRounding;
- (void)layoutSubviews;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithItems:(NSArray * _Nullable)items OBJC_DESIGNATED_INITIALIZER;
@end


@class GXLocalizedImageObject;

@interface GXSegmentedControlItem (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(GXSegmentedControlItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName reloadHandler:(void (^ _Nullable)(GXSegmentedControlItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
@end


@interface GXSegmentedControlItem (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end

@protocol GXControlTextView;
@protocol GXStyleClassWithFont;
@class UIColor;

SWIFT_CLASS_NAMED("GXStyleClassWithFontHelper_Swift")
@interface GXStyleClassWithFontHelper_Swift : NSObject
/// Apply text or attributedText with style class and format.
/// note:
/// textTransform should already be applied to the given text.
+ (void)setText:(NSString * _Nullable)text withStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver textFormat:(GXLayoutControlTextFormat)textFormat toView:(id <GXControlTextView> _Nonnull)view;
/// Apply text or attributedText with style class and format.
/// note:
/// textTransform should already be applied to the given text.
+ (void)setText:(NSString * _Nullable)text withStyleClassWithFont:(id <GXStyleClassWithFont> _Nullable)classWithFont textFormat:(GXLayoutControlTextFormat)textFormat toView:(id <GXControlTextView> _Nonnull)view;
/// Applies gxTextColor from the given styleClass and resolver or fallbackColor to the given view
+ (void)setTextColorWithStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver highlightStyle:(GXHighlightStyleType)highlightStyle fallbackColor:(UIColor * _Nullable (^ _Nullable)(void))fallbackColorResolver onlyIfNonNil:(BOOL)onlyIfNonNil toView:(id <GXControlTextView> _Nonnull)view;
+ (void)setTextColorWithControlDefaultFallbackColor:(id <GXControl> _Nonnull)control onlyIfNonNil:(BOOL)onlyIfNonNil toView:(id <GXControlTextView> _Nonnull)view;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)addDesignSystemTokenGXOptionNamesGXModelObservers;
@end


@protocol GXStyleClassPropertiesOverrides;

@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)applyBackgroundBorderShadowFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nullable)backgroundImageView borderView:(UIView * _Nullable * _Nullable)borderView borderBounds:(CGRect)borderBounds;
+ (void)applyBackgroundBorderShadowFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nullable)backgroundImageView borderView:(UIView * _Nullable * _Nullable)borderView borderBounds:(CGRect)borderBounds applyBackgroundColor:(BOOL)applyBackgroundColor;
+ (void)applyHighligthBackgroundColorFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view highlightedBlock:(BOOL (^ _Nonnull)(void))isHighlighted animated:(BOOL)animated backgroundView:(UIImageView * _Nullable)bgView;
+ (void)applyBackgroundImagesFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView;
@end


@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
/// <ul>
///   <li>
///     Applies the background color and background image from the Application style class to the given view
///   </li>
///   <li>
///     Calls applyApplicationBackgroundFromCurrentStyleObject(to: view, modelObject: modelObject, defaultBackgroundColor: nil)
///   </li>
/// </ul>
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view SWIFT_DEPRECATED_MSG("Use applyApplicationBackgroundFromCurrentStyleObject(to:modelObject:) instead");
/// <ul>
///   <li>
///     Applies the background color and background image from the Application style class to the given view
///   </li>
///   <li>
///     If the Application class doesn’t have a background color, the default background color parameter is used if not nil
///   </li>
/// </ul>
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view modelObject:(id <GXModelObject> _Nullable)modelObject withDefaultBackgroundColor:(SWIFT_NOESCAPE UIColor * _Nullable (^ _Nonnull)(void))defBgColor;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view withDefaultBackgroundColor:(UIColor * _Nullable)defBgColor SWIFT_DEPRECATED_MSG("Use applyApplicationBackgroundFromCurrentStyleObject(to:modelObject:defaultBackgroundColor:) instead");
+ (void)applyBackgroundColor:(UIColor * _Nullable)bgColor toViewControllerIfNeeded:(UIViewController * _Nonnull)controller;
@end


@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)applyBackgroundColor:(UIColor * _Nullable)color toView:(UIView * _Nonnull)view oldView:(UIView * _Nonnull)oldView animated:(BOOL)animated;
+ (void)applyBackgroundColor:(UIColor * _Nullable)color toView:(UIView * _Nonnull)view animated:(BOOL)animated;
+ (void)applyHighligth:(BOOL)highlighted animated:(BOOL)animated toBackgroundView:(UIImageView * _Nonnull)bgView;
+ (void)applyHighligthWithBlock:(BOOL (^ _Nonnull)(void))isHighlighted animated:(BOOL)animated toBackgroundView:(UIImageView * _Nonnull)bgView;
+ (void)applyBackgroundImagesToView:(UIView * _Nonnull)parentView backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView backgroundImageName:(NSString * _Nullable)bgImageName highlightedBackgroundImage:(NSString * _Nullable)hBgImageName modelObject:(id <GXModelObject> _Nullable)modelObject backgroundImageMode:(GXBackgroundImageMode)backgroundImageMode;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyBackgroundImagesToView:(UIView * _Nonnull)parentView backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView backgroundImageName:(NSString * _Nullable)bgImageName highlightedBackgroundImage:(NSString * _Nullable)hBgImageName backgroundImageMode:(GXBackgroundImageMode)backgroundImageMode SWIFT_DEPRECATED_MSG("Use applyBackgroundImages(to:backgroundImageView:backgroundImageName:highlightedBackgroundImage:backgroundImageMode:) instead");
@end



@interface GXThemeHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)addCustomFontLoadersGXModelObservers;
@end


@interface GXUserInterfaceContext (SWIFT_EXTENSION(GXCoreUI))
/// Finds a valid user interface controller from its userInterfaceContextItems.
@property (nonatomic, readonly, strong) UIViewController * _Nullable userInterfaceController;
/// Finds a valid gx root controller from its userInterfaceContextItems. Consider using userInterfaceController instead.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end

@class UIBarButtonItem;
@class NSMutableArray;

@interface GXUtilities (SWIFT_EXTENSION(GXCoreUI))
+ (BOOL)contentSizeCategoryIsAccessibilityCategory:(UIContentSizeCategory _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)flexibleSpaceSeparator SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)fixedSpaceSeparator SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)fixedSpaceSeparatorWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (void)addFlexibleSpaceSeparatorBetweenItems:(NSMutableArray * _Nonnull)items;
+ (void)addFlexibleSpaceSeparatorBetweenItems:(NSMutableArray * _Nonnull)items addLeftSeparator:(NSInteger)leftCount addRightSeparator:(NSInteger)rightCount;
@end


@interface GXViewController (SWIFT_EXTENSION(GXCoreUI))
- (void)onDesignSystemTokenOptionChanged;
@end

@class UIWindowScene;

SWIFT_CLASS("_TtC8GXCoreUI8GXWindow")
@interface GXWindow : UIWindow
@property (nonatomic, readonly) BOOL gxPreventLowContrastTintColor;
- (void)tintColorDidChange;
- (void)didAddSubview:(UIView * _Nonnull)subview;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class GXModel;

@interface GXWindow (SWIFT_EXTENSION(GXCoreUI)) <GXModelObject>
@property (nonatomic, readonly, strong) GXModel * _Nullable gxModel;
@end



@class GXEntityDataFieldEditorViewControllerHelper;

SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, strong) GXEntityDataFieldEditorViewControllerHelper * _Nullable editorHelper;
@end


SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXModelObject>
@property (nonatomic, readonly, strong) GXModel * _Nullable gxModel;
@end


SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXEntityDataFieldImagePickerProtocol>
@property (nonatomic) BOOL fieldImagePickerAllowsNull;
- (GXPresentationContext * _Nonnull)newPresentationContextForUserInterfaceContext:(GXUserInterfaceContext * _Nullable)userInterfaceContext SWIFT_WARN_UNUSED_RESULT;
- (void)updatePresentationContext:(GXPresentationContext * _Nonnull)presentationContext;
@end

@protocol GXEntityDataFieldEditorViewControllerDelegate;
@protocol GXEntityData;
@protocol GXEntityDataFieldInfo;
@protocol GXEntityDataFieldViewControllerDelegate;

SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXEntityDataFieldEditorViewController>
- (id <GXEntityDataWithOverrideValues> _Nullable)editableEntityDataFieldData SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEditingEntityData SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL shouldDelayEntityDataUpdatesUntilDissmissed;
@property (nonatomic, readonly, strong) id <GXEntityDataFieldEditorViewControllerDelegate> _Nullable entityDataFieldEditorDelegate;
- (BOOL)dismissEntityDataFieldEditorViewController:(BOOL)save animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityData> _Nullable)entityDataFieldData SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityDataFieldDescriptor> _Nonnull)entityDataFieldDescriptor SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityDataFieldInfo> _Nonnull)resolvedEntityDataFieldInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)entityDataFieldSpecifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nullable)entityDataFieldIndexer SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <GXEntityDataFieldViewControllerDelegate> _Nullable entityDataFieldDelegate;
- (BOOL)dismissEntityDataFieldViewController:(BOOL)animated completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
@end

@class NSMutableDictionary;
@class GXThemeClass;

SWIFT_CLASS_NAMED("SwitchThemeClass")
@interface SwitchThemeClass : GXThemeClassBase
+ (UIColor * _Nullable)colorForPropertyName:(GXStyleClassPropertyName _Nonnull)propName fromStyleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWith:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver SWIFT_WARN_UNUSED_RESULT;
+ (NSMutableDictionary * _Nullable)loadClassSpecificPropertiesValuesByName:(NSMutableDictionary * _Nullable)propertyValuesByName fromMetadata:(NSDictionary<NSString *, id> * _Nonnull)metadata forStyleObjectType:(GXObjectType)styleObjectType SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name propertiesValuesByName:(NSDictionary<NSString *, id> * _Nullable)propertiesValuesByName subClasses:(NSArray<GXThemeClass *> * _Nullable)subClasses OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIActivityIndicatorView (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorView>
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action SWIFT_DEPRECATED_MSG("Use init(gxImageName:modelObject:style:target:action:) instead");
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject style:(UIBarButtonItemStyle)style targetActionBlock:(void (^ _Nonnull)(void))block;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName style:(UIBarButtonItemStyle)style targetActionBlock:(void (^ _Nonnull)(void))block SWIFT_DEPRECATED_MSG("Use init(gxImageName:modelObject:style:targetActionBlock:) instead");
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
+ (UIImage * _Nonnull)gxEmptyBackgroundImage SWIFT_WARN_UNUSED_RESULT;
- (void)gxLoadEmptyBackgroundImage;
- (void)gxLoadEmptyBackBackgroundImage;
@end




@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage isBackButton:(BOOL)isBackButton;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue isBackButton:(BOOL)isBackButton;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackButtonBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackButtonBackgroundImageNamed(_:,modelObject:) instead");
@end


@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end



@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (GXImage * _Nullable)imageGxImageFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (GXImage * _Nullable)backgroundGxImageFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage state:(UIControlState)state;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage state:(UIControlState)state;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue state:(UIControlState)state;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue state:(UIControlState)state;
@end



@interface UIButton (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:for:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:for:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:for:modelObject:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:for:modelObject:) instead");
@end


@interface UICollectionViewFlowLayout (SWIFT_EXTENSION(GXCoreUI)) <GXCollectionViewFlowLayout>
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@end


@interface UIImage (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) GXImageWebCacheTransformImage _Nonnull gxDefaultWebCacheImageTransformWithNonNullGXImage;)
+ (GXImageWebCacheTransformImage _Nonnull)gxDefaultWebCacheImageTransformWithNonNullGXImage SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)applyingDefaultWebCacheImageTransformWithGXImage:(GXImage * _Nonnull)gxImage isEmbededImage:(BOOL)isEmbededImage SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end



@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetPlaceHolderImageAsFinalImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider;
- (void)gxSetPlaceHolderImageAsFinalImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
@end




@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:placeholderImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(UIImage * _Nonnull (^ _Nullable)(UIImage * _Nonnull, GXImage * _Nullable, BOOL, BOOL))transformImage reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(UIImage * _Nonnull (^ _Nullable)(UIImage * _Nonnull, GXImage * _Nullable, BOOL, BOOL))transformImage reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:placeholderImage:reloadHandler:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable highlightedImageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setHighlightedImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setHighlightedImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end



@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:options:context:progress:completed) instead");
/// If modelObject == nil, it tries to get the model object using GXStyleClassHelper.modelObjectFromStyleClass(from:resolver:) with the given styleClass and resolver
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:styleClass:resolvingToDefaultWithPropertyResolver:reloadHandler:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:options:progress:completed:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:options:context:progress:completed:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:options:progress:completed:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:options:context:progress:completed:) instead");
/// If modelObject == nil, it tries to get the model object using GXStyleClassHelper.modelObjectFromStyleClass(from:resolver:) with the given styleClass and resolver
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:styleClass:resolvingToDefaultWithPropertyResolver:reloadHandler:) instead");
@end


@interface UILabel (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UILabel (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end



@interface UINavigationBar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(id <GXModelObject> _Nullable)modelObject modelObject:(void (^ _Nullable)(UINavigationBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(void (^ _Nullable)(UINavigationBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
@end


@interface UINavigationBar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UIPickerView (SWIFT_EXTENSION(GXCoreUI)) <GXInlinePickerView>
@end

@protocol GXStyleClassWithScroll;

@interface UIScrollView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyGxStyleClassWithScroll:(id <GXStyleClassWithScroll> _Nullable)classWithScroll;
- (void)applyGXScrollIndicatorsStyle:(GXScrollIndicatorsStyle)indicatorsStyle;
- (void)applyGXScrollIndicatorsVisibility:(GXScrollIndicatorsVisibility)indicatorsVisibility;
- (void)applyGXScrollBouncingStyle:(GXScrollBouncingStyle)bouncingStyle;
@end


@interface UISearchBar (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end





@interface UITabBar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHanlder SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHanlder SWIFT_DEPRECATED_MSG("Use gxSetSelectionIndicatorImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetSelectionIndicatorImageNamed(_:modelObject:) instead");
@end


@interface UITabBar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable selectionIndicatorImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setSelectionIndicatorImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setSelectionIndicatorImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UITableViewCell (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UITextField (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UITextField (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end


@interface UITextView (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIToolbar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject realodHandler:(void (^ _Nullable)(UIToolbar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(void (^ _Nullable)(UIToolbar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
@end


@interface UIToolbar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UIView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UIView (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) UIViewController * _Nullable containerViewControllerFromNextResponder;
@end




@interface UIViewController (SWIFT_EXTENSION(GXCoreUI))
/// Returns its parentViewController if not nil or presentingViewController otherwise
@property (nonatomic, readonly, strong) UIViewController * _Nullable gxParentOrPresentingController;
/// Recursive returns the last (non nil) gxParentOrPresentingController
@property (nonatomic, readonly, strong) UIViewController * _Nonnull gxRootParentOrPresentingController;
/// Returns gxRootParentOrPresentingController as GXRootControllerProtocol
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end

@protocol GXApplicationBarsAppearance;

@interface UIViewController (SWIFT_EXTENSION(GXCoreUI))
+ (NSString * _Nullable)classNameForNavigationBarFromAppBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance SWIFT_WARN_UNUSED_RESULT;
+ (UIStatusBarStyle)gxPreferredStatusBarStyleForController:(UIViewController * _Nonnull)controller appBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance unresolvedValue:(UIStatusBarStyle)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (UIStatusBarStyle)gxPreferredStatusBarStyleForControllerWithAppBarAppearance:(UIViewController <GXApplicationBarsAppearance> * _Nonnull)controller unresolvedValue:(UIStatusBarStyle)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)gxPrefersStatusBarHiddenForController:(UIViewController * _Nonnull)controller appBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance unresolvedValue:(BOOL)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)gxPrefersStatusBarHiddenForControllerWithAppBarAppearance:(UIViewController <GXApplicationBarsAppearance> * _Nonnull)controller unresolvedValue:(BOOL)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIWindow (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) BOOL gxPreventLowContrastTintColor;
- (BOOL)gxShouldPreventLowContrastTintColorForController:(UIViewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gxPreventLowContrastTintColorIfNeededForController:(UIViewController * _Nonnull)controller;
@end


#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef GXCOREUI_SWIFT_H
#define GXCOREUI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import GXCoreBL;
@import GXDataLayer;
@import GXFoundation;
@import GXObjectsModel;
@import GXStandardClasses;
@import MapKit;
@import ObjectiveC;
@import Photos;
@import PhotosUI;
@import SafariServices;
@import UIKit;
#endif

#import <GXCoreUI/GXCoreUI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GXCoreUI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)



@protocol GXActionHandler;
@protocol GXActionHandlerUserInterfaceControllerProtocol;
@protocol GXControllerPresentationHandlerProtocol;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI)) <GXActionHandlerUIDelegate>
- (id <GXActionHandlerUserInterfaceControllerProtocol> _Nullable)actionHandlerUserInterfaceController:(id <GXActionHandler> _Nonnull)actionHandler SWIFT_WARN_UNUSED_RESULT;
- (id <GXControllerPresentationHandlerProtocol> _Nullable)actionHandlerControllerPresentationHandler:(id <GXActionHandler> _Nonnull)actionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXActionHandlerUIContext;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI)) <GXActionUIHandler>
@property (nonatomic, readonly, strong) id <GXActionHandlerUIDelegate> _Nullable uiDelegate;
@property (nonatomic, readonly, strong) id <GXActionHandlerUIContext> _Nullable actionHandlerUIContext;
@end

@class GXUserInterfaceContext;
@class UIViewController;

@interface GXActionHandler (SWIFT_EXTENSION(GXCoreUI))
/// Convenience helper over self.actionHandlerUIContext?.actionHandlerUIContextSender?.actionSenderUserInterfaceContext
@property (nonatomic, readonly, strong) GXUserInterfaceContext * _Nullable userInterfaceContext;
/// Convenience helper over GXActionHandlerUIDelegate
@property (nonatomic, readonly, strong) id <GXActionHandlerUserInterfaceControllerProtocol> _Nullable gxActionHandlerUserInterfaceController;
/// Convenience helper over GXActionHandlerUIDelegate
@property (nonatomic, readonly, strong) id <GXControllerPresentationHandlerProtocol> _Nullable gxActionHandlerControllerPresentationHandler;
/// Finds an user interface controller from gxActionHandlerUserInterfaceController or userInterfaceContext. Consider using gxActionHandlerControllerPresentationHandler for presentation instead.
@property (nonatomic, readonly, strong) UIViewController * _Nullable gxActionHandlerUserInterfaceControllerFromContext;
/// Finds a gx root controller from gxActionHandlerUserInterfaceController or userInterfaceContext. Consider using gxActionHandlerControllerPresentationHandler or gxActionHandlerUserInterfaceControllerFromContext for presentation instead.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxActionHandlerRootControllerFromContext;
@end


@interface NSBundle (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nonnull gxBundle_CoreUI;)
+ (NSBundle * _Nonnull)gxBundle_CoreUI SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXActionExternalObjectDescriptor;
@class NSString;

SWIFT_CLASS("_TtC8GXCoreUI32GXActionExObjDesignSystemHandler")
@interface GXActionExObjDesignSystemHandler : GXActionExternalObjectHandler
+ (BOOL)handleActionExecutionUsingMethodHandlerSelectorNamePrefix SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) GXActionExternalObjectHandlerThreadRequirement actionExObjThreadRequirement;
- (void)gxActionExObjMethodHandler_SetOption:(NSArray * _Nonnull)parameters;
- (void)gxActionExObjMethodHandler_ClearOption:(NSArray * _Nonnull)parameters;
- (nonnull instancetype)initWithActionExObjDescriptor:(id <GXActionExternalObjectDescriptor> _Nonnull)actionExObjDesc componentActionsHandlers:(NSArray<id <GXActionHandler>> * _Nullable)componentActionsHandlers userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXActionExObjDynamicCallHandler")
@interface GXActionExObjDynamicCallHandler : GXActionExternalObjectHandler
+ (BOOL)handleActionExecutionUsingMethodHandlerSelectorNamePrefix SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) GXActionExternalObjectHandlerThreadRequirement actionExObjThreadRequirement;
- (void)gxActionExObjMethodHandler_SetOption:(NSArray * _Nonnull)parameters;
- (nonnull instancetype)initWithActionExObjDescriptor:(id <GXActionExternalObjectDescriptor> _Nonnull)actionExObjDesc componentActionsHandlers:(NSArray<id <GXActionHandler>> * _Nullable)componentActionsHandlers userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class GXStyleClass;
@protocol GXStyleClassPropertyDefaultResolver;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorView")
@protocol GXActivityIndicatorView <NSObject>
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
@end

@protocol GXActivityIndicatorViewWithMessage;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewProviderProtocol")
@protocol GXActivityIndicatorViewProviderProtocol <NSObject>
- (id <GXActivityIndicatorView> _Nonnull)activityIndicatorView SWIFT_WARN_UNUSED_RESULT;
@optional
- (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessage SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<GXStyleClassPropertyName> * _Nonnull animationThemeClassExtensionProperties;
@end


SWIFT_CLASS_NAMED("GXActivityIndicatorViewProvidersManager")
@interface GXActivityIndicatorViewProvidersManager : NSObject
+ (void)registerWithActivityIndicatorViewProvider:(id <GXActivityIndicatorViewProviderProtocol> _Nonnull)provider forIdentifier:(NSString * _Nonnull)identifier;
+ (id <GXActivityIndicatorView> _Nonnull)activityIndicatorViewForIdentifier:(NSString * _Nullable)identifier SWIFT_WARN_UNUSED_RESULT;
+ (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessageForIdentifier:(NSString * _Nullable)identifier SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWithMessage")
@protocol GXActivityIndicatorViewWithMessage <GXActivityIndicatorView>
@property (nonatomic, copy) NSString * _Nullable messageText;
@end


SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWithProgress")
@protocol GXActivityIndicatorViewWithProgress <GXActivityIndicatorView>
- (void)setProgress:(CGFloat)newProgress;
@end

enum GXActivityIndicatorViewWrappedLayoutStyle : NSInteger;

SWIFT_PROTOCOL_NAMED("GXActivityIndicatorViewWrapped")
@protocol GXActivityIndicatorViewWrapped <GXActivityIndicatorView>
@optional
@property (nonatomic, readonly) UIRectEdge wrappedActivityIndicatorViewAllowedMessagePosition;
@property (nonatomic, readonly) UIRectEdge wrappedActivityIndicatorViewPreferredMessagePosition;
@property (nonatomic, readonly) enum GXActivityIndicatorViewWrappedLayoutStyle wrappedActivityIndicatorViewLayoutStyle;
@end

typedef SWIFT_ENUM(NSInteger, GXActivityIndicatorViewWrappedLayoutStyle, open) {
  GXActivityIndicatorViewWrappedLayoutStyleCenterMessage = 0,
  GXActivityIndicatorViewWrappedLayoutStyleCenterActivityIndicatorViewMessage = 1,
};

@class NSCoder;

SWIFT_CLASS("_TtC8GXCoreUI41GXActivityIndicatorViewWrapperWithMessage")
@interface GXActivityIndicatorViewWrapperWithMessage : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface GXActivityIndicatorViewWrapperWithMessage (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorViewWithMessage>
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver withFlags:(UIViewThemeFlags)flags;
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, copy) NSString * _Nullable messageText;
@end

@protocol GXModelObject;
@class UITraitCollection;
@class UIImage;

SWIFT_CLASS("_TtC8GXCoreUI30GXApplicationBarTitleImageView")
@interface GXApplicationBarTitleImageView : UIImageView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, weak) id <GXModelObject> _Nullable gxModelObject;
@property (nonatomic, readonly, copy) NSString * _Nonnull gxImageName;
- (void)setGxImageName:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
- (void)sizeToFit;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8GXCoreUI25GXCodeScannerSoundManager")
@interface GXCodeScannerSoundManager : NSObject
- (void)beep;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GXCodeScannerViewDelegate;
@class UITapGestureRecognizer;

SWIFT_CLASS("_TtC8GXCoreUI17GXCodeScannerView")
@interface GXCodeScannerView : UIView
@property (nonatomic, weak) id <GXCodeScannerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
+ (NSError * _Nullable)isUnavailableError SWIFT_WARN_UNUSED_RESULT;
- (void)beginScanningWithScannerBarcodeTypes:(NSArray<NSString *> * _Nonnull)scannerBarcodeTypes;
- (void)endScanning;
- (void)updatePreviewLayerOriantation:(UIInterfaceOrientation)oriantation;
- (void)tapToFocus:(UITapGestureRecognizer * _Nonnull)singleTap;
@end

@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface GXCodeScannerView (SWIFT_EXTENSION(GXCoreUI)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


SWIFT_PROTOCOL("_TtP8GXCoreUI25GXCodeScannerViewDelegate_")
@protocol GXCodeScannerViewDelegate <NSObject>
- (void)codeScannerView:(GXCodeScannerView * _Nonnull)scannerView didReadCode:(NSString * _Nonnull)code;
@end

@protocol GXControlGridItemDelegate;
@class GXControlTableGridItem;
@class NSIndexPath;
@class UICollectionViewLayoutAttributes;

SWIFT_CLASS("_TtC8GXCoreUI30GXCollectionViewCellEntityData")
@interface GXCollectionViewCellEntityData : UICollectionViewCell <GXControlGridItem>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
- (void)prepareForReuse;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)layoutSubviews;
@property (nonatomic, weak) id <GXControlGridItemDelegate> _Nullable gridItemDelegate;
@property (nonatomic, readonly, strong) UIView * _Nonnull gridItemView;
@property (nonatomic, readonly, strong) GXControlTableGridItem * _Nullable gridItemTable;
@property (nonatomic, strong) GXStyleClass * _Nullable gridItemStyleClass;
@property (nonatomic) CGSize gridItemRelativeSizeForPercentDimension;
@property (nonatomic) BOOL gridItemSelected;
- (void)setGridItemSelected:(BOOL)selected animated:(BOOL)animated;
@property (nonatomic, readonly) GXHighlightStyleType gridItemHighlightStyle;
@property (nonatomic) GXControlGridItemHighlightStyleModifierFlags gridItemHighlightStyleModifiers;
@property (nonatomic, readonly, copy) NSIndexPath * _Nullable gxItemIndexPath;
- (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes;
@end


@interface GXCollectionViewCellEntityData (SWIFT_EXTENSION(GXCoreUI)) <GXControlGridCollectionTableViewCellEntityData>
- (void)initializeWithGridItemTable:(GXControlTableGridItem * _Nonnull)gridItemTable relativeSizeForPercentDimension:(CGSize)relativeSizeForPercentDimension;
@end


SWIFT_PROTOCOL_NAMED("GXCollectionViewFlowLayout")
@protocol GXCollectionViewFlowLayout
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
/// Called from styleClass:defaultPropertyValueForpropertyName: when styleClass is not GXThemeClass
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nullable)styleClassPropertyDefaultResolverForStyleClass:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
- (void)scrollIntoView:(NSArray * _Nonnull)parameters;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI))
/// Called after GXDesignSystemTokenOptionChangedNotification and calls onDesignSystemTokenOptionChanged() if true is returned
/// Default implementation returns true if self.styleClass is a design system class with token references, false otherwise
@property (nonatomic, readonly) BOOL hasDesignSystemTokenReference;
/// Called after GXDesignSystemTokenOptionChangedNotification if hasDesignSystemTokenReference() returns true
/// Default implementation resets the style class
- (void)onDesignSystemTokenOptionChanged;
@end


@interface GXControlBase (SWIFT_EXTENSION(GXCoreUI)) <GXStyleClassPropertyDefaultResolver>
- (id _Nullable)styleClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id <GXModelObject> _Nullable styleClassPropertyDefaultResolverModelObject;
@end

@protocol GXControlRuntimePropertiesProxy;
@protocol GXEntityDataWithOverrideValues;
@protocol GXDynamicPropertyOverrideUserInterfaceContext;

SWIFT_CLASS_NAMED("GXControlBaseRuntimePropertiesProxyWrapper")
@interface GXControlBaseRuntimePropertiesProxyWrapper : NSObject <GXControlBaseRuntimeProperties, GXNamedControlElement>
- (nonnull instancetype)init:(id <GXControlRuntimePropertiesProxy> _Nonnull)proxy controlName:(NSString * _Nonnull)controlName userInterfaceContext:(GXUserInterfaceContext * _Nullable)uiContext contextEntityData:(id <GXEntityDataWithOverrideValues> _Nullable)contextEntityData OBJC_DESIGNATED_INITIALIZER;
- (id <GXDynamicPropertyOverrideUserInterfaceContext> _Nullable)addUserInterfaceContexWithDynamicPropertyOverrideName:(NSString * _Nonnull)lowercasePropName;
@property (nonatomic, readonly, copy) NSString * _Nonnull controlName;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (void)setProperty:(NSString * _Nonnull)propertyName value:(id _Nullable)propertyValue;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters entityData:(id <GXEntityDataWithOverrideValues> _Nullable)entityData SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters entityData:(id <GXEntityDataWithOverrideValues> _Nullable)entityData userInterfaceContext:(GXUserInterfaceContext * _Nullable)uiContext SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol GXLayoutElementData;
@protocol GXEntityDataFieldDescriptor;
@class NSNumber;
@protocol GXControlContainer;

SWIFT_CLASS_NAMED("GXControlDrawing")
@interface GXControlDrawing : GXControlImage
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL readOnly;
- (BOOL)applyPropertyValue:(id _Nullable)propValue toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (void)loadContentViewsWithContentFrame:(CGRect)contentFrame intoContainerView:(UIView * _Nonnull)containerView;
- (void)layoutContentViewsWithContentFrame:(CGRect)contentFrame;
@end


@interface GXControlDrawing (SWIFT_EXTENSION(GXCoreUI))
- (Class _Nonnull)reuseContextClass SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuseViews;
- (void)endPrepareForReuseViews;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlDrawingReuseContext")
@interface GXControlDrawingReuseContext : GXControlEditableWithLabelBaseReuseContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;
@class UIEvent;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC8GXCoreUI20GXControlDrawingView")
@interface GXControlDrawingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXControl;

@interface GXControlFactory (SWIFT_EXTENSION(GXCoreUI))
/// Registers the given control class for the given user control type
/// \param controlClass Control class, must conform to GXControl.
///
/// \param userControlType Case sensitive user control type.
///
+ (void)registerControlClass:(Class <GXControl> _Nonnull)controlClass forUserControlType:(NSString * _Nonnull)userControlType;
@end


@interface GXControlFactory (SWIFT_EXTENSION(GXCoreUI)) <GXControlModelService>
+ (NSDictionary<NSString *, id> * _Nullable)transformControl:(NSString * _Nonnull)userControlType customPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nullable)customProperties SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nullable)transformControlType:(NSString * _Nonnull)controlType customPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nullable)customProperties SWIFT_WARN_UNUSED_RESULT;
@end




@interface GXControlGridBase (SWIFT_EXTENSION(GXCoreUI))
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)groupSeparatorStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)horizontalStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDelegateFlowLayout>
@end

@class UICollectionView;

@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDataSource>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)indexTitlesForCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSIndexPath * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForIndexTitle:(NSString * _Nonnull)title atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionViewLayout;
@class UIScrollView;
@protocol GXControlGridCollectionTableView;

@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) UICollectionView * _Nullable gridCollectionView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newGridViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)makeGridViewReloadDelegateSelectors:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (Class _Nonnull)classForCellEntityDataWithReuseIdentifier:(NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (void)onRelativeSizeForItemWithPercentDimensionChanged:(CGSize)oldRelativeSizeForItemWithPercentDimension;
@end


@interface GXControlGridCollectionViewBase (SWIFT_EXTENSION(GXCoreUI)) <UICollectionViewDelegate>
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath;
@property (nonatomic, readonly) CGFloat defaultGridItemHeight;
@property (nonatomic, readonly) CGSize defaultGridItemSize;
@end


SWIFT_CLASS("_TtC8GXCoreUI45GXControlGridCollectionViewBaseCollectionView")
@interface GXControlGridCollectionViewBaseCollectionView : UICollectionView
@property (nonatomic) CGRect bounds;
@property (nonatomic) CGRect frame;
@property (nonatomic) UIEdgeInsets contentInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI37GXControlGridCollectionViewFlowLayout")
@interface GXControlGridCollectionViewFlowLayout : UICollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXLayoutElement;
@class GXStyleKBObject;
@protocol GXControlBaseProperties;

@interface GXControlHelpers (SWIFT_EXTENSION(GXCoreUI))
+ (GXStyleClass * _Nullable)currentStyleClassFromControlLayoutElement:(id <GXControl> _Nonnull)control SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)currentStyleClassFromLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFromControlLayoutElement:(id <GXControl> _Nonnull)control styleObject:(GXStyleKBObject * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFromLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement styleObject:(GXStyleKBObject * _Nullable)styleObject SWIFT_WARN_UNUSED_RESULT;
+ (GXStyleClass * _Nullable)styleClassFrom:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver forDragDropState:(GXDragDropState)state SWIFT_WARN_UNUSED_RESULT;
+ (id <GXStyleClassPropertyDefaultResolver> _Nullable)styleClassPropertyDefaultResolverForStyleClass:(GXStyleClass * _Nullable)styleClass control:(id <GXControlBaseProperties> _Nullable)control SWIFT_WARN_UNUSED_RESULT;
@end

@class UIPickerView;
@protocol GXInlinePickerView;

SWIFT_CLASS("_TtC8GXCoreUI30GXControlMulticolumnWheelLabel")
@interface GXControlMulticolumnWheelLabel : GXEditorLabelWithPlaceholderAndInputViewBase <UIPickerViewDataSource, UIPickerViewDelegate>
@property (nonatomic, strong) UIPickerView * _Nullable picker;
@property (nonatomic, readonly, strong) UIView <GXInlinePickerView> * _Nullable inlinePicker;
- (UIPickerView * _Nullable)createPickerIfNeeded SWIFT_WARN_UNUSED_RESULT;
- (void)updateGXControlValueFromPicker;
- (void)loadPickerValueFromGXControl;
- (void)cleanPicker;
- (UIView * _Nonnull)setupInputView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol GXEntityDataDescriptor;
@class GXBusinessComponentLevel;
@protocol GXControlView;
@protocol GXControlGridCollectionTableViewCell;

SWIFT_CLASS_NAMED("GXControlPagedGrid")
@interface GXControlPagedGrid : GXControlGridCollectionViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement dataDescriptor:(id <GXEntityDataDescriptor> _Nonnull)dataDescriptor businessComponentLevel:(GXBusinessComponentLevel * _Nullable)businessComponentLevel controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nullable)parentControl relations:(NSDictionary * _Nullable)relationsByDataElementName OBJC_DESIGNATED_INITIALIZER;
- (void)unloadView;
- (void)onControlFrameChanged:(CGRect)oldControlFrame;
- (GXLayoutQuadDimension)contentRequiredEdgeInsetsToViewFrame SWIFT_WARN_UNUSED_RESULT;
- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation duration:(NSTimeInterval)duration;
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (BOOL)applyPropertyValue:(id _Nullable)propValue toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newGridViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (UIView <GXControlView> * _Nonnull)newMainViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)layoutControls;
@property (nonatomic, readonly) BOOL gxControlTableGridItemAutoGrow;
@property (nonatomic, readonly) BOOL gridShouldAutoLoadOnLastCellVisible;
@property (nonatomic, readonly) BOOL gridViewHandlesContentInsets;
@property (nonatomic, readonly) BOOL gridSupportsExpandableBounds;
- (void)reloadData:(NSDictionary<NSString *, id> * _Nullable)loadInfo;
- (Class _Nonnull)classForCellEntityDataWithReuseIdentifier:(NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (void)updateGridViewDefaultItemSize:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger layoutElementRowsPerPagePortrait;
@property (nonatomic, readonly) NSUInteger layoutElementRowsPerPageLandscape;
@property (nonatomic, readonly) NSUInteger layoutElementColumnsPerPagePortrait;
@property (nonatomic, readonly) NSUInteger layoutElementColumnsPerPageLandscape;
@property (nonatomic, readonly) BOOL layoutElementShowPageControl;
- (void)pageControlDidChangeWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)reloadPendingReloadIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)vReloadIndexPaths;
- (UIView <GXControlGridCollectionTableViewCell> * _Nonnull)gridView:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)vIndexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) GXScrollIndicatorsVisibility resolvedScrollIndicatorsVisibilityDefault;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
- (CGFloat)gridItemWidthForHeightCalculationOfEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered layoutName:(NSString * _Nullable)layoutName context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeWidthForItemWithPercentWidth:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeHeightForItemWithPercentHeight:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
+ (Class _Nonnull)loadedInfoClass SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI))
- (Class _Nonnull)reuseContextClass SWIFT_WARN_UNUSED_RESULT;
- (void)endPrepareForReuseViews;
@end

@protocol GXControlAutoHeightDelegate;

@interface GXControlPagedGrid (SWIFT_EXTENSION(GXCoreUI)) <GXControlAutoHeight>
@property (nonatomic, weak) id <GXControlAutoHeightDelegate> _Nullable autoHeightDelegate;
- (CGFloat)additionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasAutoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (GXControlAutoHeightDependencyFlags)autoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)setFrameWithAdditionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI32GXControlPagedGridCollectionView")
@interface GXControlPagedGridCollectionView : GXControlGridCollectionViewBaseCollectionView
- (void)gxScrollToItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath atScrollPosition:(GXControlGridCollectionTableViewScrollPosition)scrollPosition animated:(BOOL)animated;
- (void)adjustedContentInsetDidChange SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI46GXControlPagedGridCollectionViewCellEntityData")
@interface GXControlPagedGridCollectionViewCellEntityData : GXCollectionViewCellEntityData
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlPagedGridFlowLayout")
@interface GXControlPagedGridFlowLayout : GXControlGridCollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
@end

@class GXControlGridItemHeightLoadedInfo;

SWIFT_CLASS("_TtC8GXCoreUI28GXControlPagedGridLoadedInfo")
@interface GXControlPagedGridLoadedInfo : GXControlGridBaseLoadedInfo
- (void)willRemoveLoadedSectionsCountInRange:(NSRange)rangeToRemove;
- (void)setNumberOfLoadedItemsWithoutSupplementaryElements:(NSUInteger)itemsCount inSection:(NSUInteger)section;
@property (nonatomic, readonly) BOOL itemHeightsLoadedInfoDelegateRequired;
- (void)controlGridItemHeightLoadedInfo:(GXControlGridItemHeightLoadedInfo * _Nonnull)itemHeights didChangeItemHeight:(CGFloat)oldItemHeight withNewItemHeight:(CGFloat)newItemHeight atIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI30GXControlPagedGridReuseContext")
@interface GXControlPagedGridReuseContext : GXControlGridBaseReuseContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXControlRadioButton")
@interface GXControlRadioButton : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)loadEntityDataFieldValue;
- (void)onReadOnlyChanged;
- (void)onEnabledChanged;
- (CGRect)editorViewFrameForEditorFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (void)applyStyleClass;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)executeMethod:(NSString * _Nonnull)methodName withParameters:(NSArray * _Nonnull)parameters SWIFT_WARN_UNUSED_RESULT;
- (void)valueChanged:(id _Nonnull)_;
@end


SWIFT_CLASS_NAMED("GXControlScannerInline")
@interface GXControlScannerInline : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)loadEntityDataFieldValue;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)onVisibleChanged;
@end


@interface GXControlScannerInline (SWIFT_EXTENSION(GXCoreUI)) <GXCodeScannerViewDelegate>
- (void)codeScannerView:(GXCodeScannerView * _Nonnull)scannerView didReadCode:(NSString * _Nonnull)code;
@end


SWIFT_CLASS_NAMED("GXControlSmartGrid")
@interface GXControlSmartGrid : GXControlGridCollectionViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElement> _Nonnull)layoutElement dataDescriptor:(id <GXEntityDataDescriptor> _Nonnull)dataDescriptor businessComponentLevel:(GXBusinessComponentLevel * _Nullable)businessComponentLevel controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nullable)parentControl relations:(NSDictionary * _Nullable)relationsByDataElementName OBJC_DESIGNATED_INITIALIZER;
- (BOOL)respondsToSelector:(SEL _Null_unspecified)aSelector SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL gridViewHandlesContentInsets;
@property (nonatomic, readonly) BOOL gridSupportsExpandableBounds;
@property (nonatomic, readonly) BOOL gxControlTableGridItemAutoGrow;
@property (nonatomic, readonly) BOOL gxControlTableGridItemPercentDimensionAs100;
- (void)updateGridViewDefaultItemSize:(UIScrollView <GXControlGridCollectionTableView> * _Nonnull)gridView;
- (UICollectionViewLayout * _Nonnull)newGridCollectionViewLayout SWIFT_WARN_UNUSED_RESULT;
- (UICollectionView * _Nonnull)newGridCollectionViewWithFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class GXControlGridItemHeightCalculationHelper;

@interface GXControlSmartGrid (SWIFT_EXTENSION(GXCoreUI))
- (BOOL)shouldCalculateDynamicHeightForEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)gridItemHeightForHeightCalculation:(BOOL)calculateDynamicHeight ofEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)gridItemWidthForHeightCalculationOfEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered layoutName:(NSString * _Nullable)layoutName context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGSize)gridItemSizeForHeightCalculation:(BOOL)calculateDynamicHeight ofEntityData:(id <GXEntityDataWithOverrideValues> _Nonnull)entityData helper:(GXControlGridItemHeightCalculationHelper * _Nonnull)itemHelper atIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeWidthForItemWithPercentWidth:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)calculateRelativeHeightForItemWithPercentHeight:(CGRect)gridViewFrame SWIFT_WARN_UNUSED_RESULT;
- (CGSize)gridItemSizeForEntityDataAtIndex:(NSUInteger)index section:(NSUInteger)section filtered:(BOOL)filtered context:(id _Nullable)context canIgnoreWidth:(BOOL)canIgnoreWidth SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI32GXControlSmartGridCollectionView")
@interface GXControlSmartGridCollectionView : GXControlGridCollectionViewBaseCollectionView
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI28GXControlSmartGridFlowLayout")
@interface GXControlSmartGridFlowLayout : GXControlGridCollectionViewFlowLayout
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layoutAttributesClass;)
+ (Class _Nonnull)layoutAttributesClass SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI34GXControlSmartGridLayoutAttributes")
@interface GXControlSmartGridLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GXControlSmartGridMultipleItems, open) {
  GXControlSmartGridMultipleItemsSingle = 0,
  GXControlSmartGridMultipleItemsMultipleByQuantity = 1,
  GXControlSmartGridMultipleItemsStaggeredByQuantity = 2,
  GXControlSmartGridMultipleItemsMultipleBySize = 3,
};

@protocol GXLayoutElementGrid;
enum GXControlSmartGridScrollDirection : NSInteger;

SWIFT_CLASS_NAMED("GXControlSmartGridPropertiesHelper")
@interface GXControlSmartGridPropertiesHelper : NSObject
@property (nonatomic, readonly, strong) id <GXLayoutElementGrid> _Nonnull layoutElement;
- (nullable instancetype)initWithLayoutElementMaybeSmartGrid:(id <GXLayoutElementGrid> _Nullable)layoutElement;
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementGrid> _Nonnull)layoutElement OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) enum GXControlSmartGridScrollDirection scrollDirection;
@property (nonatomic) enum GXControlSmartGridMultipleItems multipleItems;
@property (nonatomic) NSUInteger itemsByQuantityPerRowColumn;
@property (nonatomic) CGFloat itemBySizeMinWidthHeight;
@property (nonatomic) CGFloat itemBySizeMaxWidthHeight;
@property (nonatomic) BOOL scrollReverse;
@property (nonatomic) BOOL snapToGrid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GXControlSmartGridScrollDirection, open) {
  GXControlSmartGridScrollDirectionVertical = 0,
  GXControlSmartGridScrollDirectionHorizontal = 1,
};


SWIFT_CLASS("_TtC8GXCoreUI33GXControlSmartGridStaggeredLayout")
@interface GXControlSmartGridStaggeredLayout : UICollectionViewLayout
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
@property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
- (void)prepareLayout;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UISwitch;

SWIFT_CLASS("_TtC8GXCoreUI15GXControlSwitch")
@interface GXControlSwitch : GXControlEditableWithLabelSingleEditorViewBase
- (nonnull instancetype)initWithLayoutElement:(id <GXLayoutElementData> _Nonnull)layoutElement controlId:(NSUInteger)controlId gxMode:(GXModeType)modeType fieldDescriptor:(id <GXEntityDataFieldDescriptor> _Nonnull)fieldDescriptor indexerStack:(NSArray<NSNumber *> * _Nullable)indexer parentControl:(id <GXControlContainer> _Nonnull)parentControl OBJC_DESIGNATED_INITIALIZER;
- (void)loadEntityDataFieldValue;
- (void)onReadOnlyChanged;
- (void)onEnabledChanged;
- (CGRect)editorViewFrameForEditorFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)newEditorViewWithFrame:(CGRect)editorFrame SWIFT_WARN_UNUSED_RESULT;
- (void)layoutEditorViewsWithEditorFrame:(CGRect)editorFrame;
- (void)applyStyleClass;
- (void)unloadView;
- (CGFloat)additionalHeightToFrame:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasAutoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (GXControlAutoHeightDependencyFlags)autoHeightDependencyFlags SWIFT_WARN_UNUSED_RESULT;
- (void)onSwitchValueChanged:(UISwitch * _Nonnull)switchView;
@end

typedef SWIFT_ENUM(NSInteger, GXControlVideoPlayInFullScreenType, closed) {
  GXControlVideoPlayInFullScreenTypePlatformDefault = 0,
  GXControlVideoPlayInFullScreenTypeYes = 1,
  GXControlVideoPlayInFullScreenTypeNo = 2,
};

enum GXControlVideoShowPlaybackControlsType : NSInteger;

SWIFT_CLASS("_TtC8GXCoreUI24GXControlVideoProperties")
@interface GXControlVideoProperties : NSObject
@property (nonatomic) enum GXControlVideoShowPlaybackControlsType showPlaybackControls;
@property (nonatomic) NSInteger playbackRate;
@property (nonatomic) BOOL autoplay;
@property (nonatomic) enum GXControlVideoPlayInFullScreenType playInFullScreen;
@property (nonatomic, readonly) BOOL resolvedPlayInFullScreen;
@property (nonatomic, readonly, copy) NSString * _Nullable placeholderImageRef;
@property (nonatomic, readonly, copy) NSString * _Nullable thumbnailAtt;
@property (nonatomic, readonly, copy) NSString * _Nullable thumbnailFieldSpecifier;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithLayoutElementData:(id <GXLayoutElementData> _Nonnull)layoutElementData OBJC_DESIGNATED_INITIALIZER;
- (BOOL)applyPropertyValue:(id _Nullable)value toPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForPropertyName:(NSString * _Nonnull)propName SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuse;
- (void)endPrepareForReuse;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

typedef SWIFT_ENUM(NSInteger, GXControlVideoShowPlaybackControlsType, closed) {
  GXControlVideoShowPlaybackControlsTypeOnInteraction = 0,
  GXControlVideoShowPlaybackControlsTypeNever = 1,
};



SWIFT_CLASS("_TtC8GXCoreUI35GXControlWithExpandableBoundsHelper")
@interface GXControlWithExpandableBoundsHelper : NSObject
+ (UIEdgeInsets)validExpandableWithEdgeInsets:(UIEdgeInsets)edgeInsets forExpandDirections:(GXLayoutExpandDirection)expandDirection SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)validExpandableWithEdgeInsets:(UIEdgeInsets)edgeInsets forExpandDirectionsResolver:(GXLayoutExpandDirection (^ _Nonnull)(void))expandDirectionResolver SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBounds:(CGRect)contentBounds withInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdges:(UIEdgeInsets)contentEdges withInsets:(GXLayoutQuadDimension)insets SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBounds:(CGRect)contentBounds withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdges:(UIEdgeInsets)contentEdges withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentBoundsButBottom:(CGRect)contentBounds withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
+ (UIEdgeInsets)expandableEdgeInsets:(UIEdgeInsets)expEdgeInsets matchingContentEdgesButBottom:(UIEdgeInsets)contentEdges withControlFrame:(CGRect)controlFrame SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXControlWithLabelBase (SWIFT_EXTENSION(GXCoreUI))
- (id _Nullable)nonThemeClass:(GXStyleClass * _Nullable)styleClass defaultPropertyValueForpropertyName:(GXStyleClassPropertyName _Nonnull)propertyName SWIFT_WARN_UNUSED_RESULT;
- (id <GXStyleClassPropertyDefaultResolver> _Nonnull)labelStyleClassPropertyDefaultResolverFor:(GXStyleClass * _Nullable)styleClass SWIFT_WARN_UNUSED_RESULT;
@end

@protocol GXEventDescriptor;
@protocol GXControllerProtocol;

SWIFT_CLASS("_TtC8GXCoreUI18GXControllerHelper")
@interface GXControllerHelper : NSObject
+ (GXControllerBackEventType)backEventType:(id <GXEventDescriptor> _Nullable)backEvent SWIFT_WARN_UNUSED_RESULT;
+ (void)updateGXControllerReturnState:(id <GXControllerProtocol> _Nonnull)controller;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GXDesignSystemTokenValue;

SWIFT_CLASS("_TtC8GXCoreUI44GXCoreUIDesignSystemStyleClassPropertyLoader")
@interface GXCoreUIDesignSystemStyleClassPropertyLoader : NSObject <GXDesignSystemStyleClassPropertyLoader>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXCoreUIDesignSystemStyleClassPropertyLoader * _Nonnull shared;)
+ (GXCoreUIDesignSystemStyleClassPropertyLoader * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<GXStyleClassPropertyName, id> * _Nullable)loadStyleClassPropertiesFromMetadata:(NSDictionary<NSString *, id> * _Nonnull)metadata SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)convertDesignSystemTokenValue:(GXDesignSystemTokenValue * _Nonnull)value forProperty:(GXStyleClassPropertyName _Nonnull)property SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSSet<GXStyleClassPropertyName> * _Nullable convertibleStyleClassPropertyNames;
@end

@class UIApplication;
@class NSURL;

SWIFT_CLASS("_TtC8GXCoreUI35GXDeepLinkApplicationOpenURLHandler")
@interface GXDeepLinkApplicationOpenURLHandler : NSObject <GXApplicationOpenURLHandler>
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=9.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GXCoreUI38GXDefaultActivityIndicatorViewProvider")
@interface GXDefaultActivityIndicatorViewProvider : NSObject <GXActivityIndicatorViewProviderProtocol>
- (id <GXActivityIndicatorView> _Nonnull)activityIndicatorView SWIFT_WARN_UNUSED_RESULT;
- (id <GXActivityIndicatorViewWithMessage> _Nonnull)activityIndicatorViewWithMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum GXColorSchemeType : NSInteger;

SWIFT_CLASS_NAMED("GXEOAppearance")
@interface GXEOAppearance : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
+ (enum GXColorSchemeType)preferredColorSchemeEnumForModelObject:(id <GXModelObject> _Nonnull)modelObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, GXColorSchemeType, "ColorScheme", closed) {
  GXColorSchemeTypeUnspecified = 0,
  GXColorSchemeTypeLight = 1,
  GXColorSchemeTypeDark = 2,
};


@interface GXEOAppearance (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) NSInteger preferredColorScheme;
@end


SWIFT_CLASS_NAMED("GXEODeepLink")
@interface GXEODeepLink : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GXEODesignSystem")
@interface GXEODesignSystem : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXEODesignSystem (SWIFT_EXTENSION(GXCoreUI))
+ (void)setOption:(NSString * _Nonnull)name :(NSString * _Nonnull)value;
+ (void)clearOption:(NSString * _Nonnull)name;
@end


SWIFT_CLASS_NAMED("GXEODynamicCall")
@interface GXEODynamicCall : GXExternalObjectBase
@property (nonatomic, readonly, copy) NSString * _Nonnull externalObjectName;
+ (void)setOption:(NSString * _Nonnull)objectNameOrLink :(NSString * _Nonnull)callOption :(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureInput;
@class AVCaptureDevice;

SWIFT_PROTOCOL("_TtP8GXCoreUI33GXEOiOSPermissionsCameraOptionals_") SWIFT_AVAILABILITY(maccatalyst,introduced=14.0)
@protocol GXEOiOSPermissionsCameraOptionals
@optional
/// Return device property if the given input is AVCaptureDeviceInput
+ (AVCaptureDevice * _Nullable)captureDeviceFromInput:(AVCaptureInput * _Nonnull)input SWIFT_WARN_UNUSED_RESULT;
/// Return device property if the given input is AVCaptureDeviceInput
+ (AVCaptureInput * _Nullable)newCaptureDeviceInputWithDevice:(AVCaptureDevice * _Nonnull)captureDevice SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP8GXCoreUI39GXEOiOSPermissionsPhotoLibraryOptionals_")
@protocol GXEOiOSPermissionsPhotoLibraryOptionals
@optional
/// Calls PHPhotoLibrary requestAuthorization with the given handler
+ (void)requestPhotoLibraryAuthorization:(void (^ _Nonnull)(PHAuthorizationStatus))handler;
@end

@class GXPresentationContext;

SWIFT_PROTOCOL("_TtP8GXCoreUI36GXEntityDataFieldImagePickerProtocol_")
@protocol GXEntityDataFieldImagePickerProtocol <GXEntityDataFieldEditorViewController>
@property (nonatomic) BOOL fieldImagePickerAllowsNull;
- (GXPresentationContext * _Nonnull)newPresentationContextForUserInterfaceContext:(GXUserInterfaceContext * _Nullable)userInterfaceContext SWIFT_WARN_UNUSED_RESULT;
- (void)updatePresentationContext:(GXPresentationContext * _Nonnull)presentationContext;
@end

@class UIPinchGestureRecognizer;

SWIFT_CLASS_NAMED("GXFullScreenZoomImageView")
@interface GXFullScreenZoomImageView : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXFullScreenZoomImageView * _Nonnull sharedInstance;)
+ (GXFullScreenZoomImageView * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)handleFullScreenZoomOfImageView:(UIImageView * _Nonnull)imageView withGesture:(UIPinchGestureRecognizer * _Nonnull)gesture withMaxZoomScaleOf:(CGFloat)maxZoomScale;
@end

@class GXImage;

SWIFT_CLASS("_TtC8GXCoreUI15GXImageObserver")
@interface GXImageObserver : NSObject
@property (nonatomic, readonly, strong) GXImage * _Nonnull image;
- (nonnull instancetype)initWithImage:(GXImage * _Nonnull)image OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) void (^ _Nullable reloadHandler)(GXImageObserver * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface GXImageObserver (SWIFT_EXTENSION(GXCoreUI))
- (void)performIgnoringImageKeyPathChanges:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actions;
+ (void)performIgnoringImageKeyPathChangesOfObserver:(GXImageObserver * _Nullable)observer actions:(SWIFT_NOESCAPE void (^ _Nonnull)(void))actions;
@end

@protocol GXWebViewController;
@class SFSafariViewController;

SWIFT_CLASS("_TtC8GXCoreUI20GXInAppBrowserHelper")
@interface GXInAppBrowserHelper : NSObject <SFSafariViewControllerDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXInAppBrowserHelper * _Nonnull sharedInstance;)
+ (GXInAppBrowserHelper * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)openWithUrl:(NSURL * _Nullable)url fromHandler:(GXActionHandler * _Nullable)handler completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)openWithUrl:(NSURL * _Nullable)url fromControl:(id <GXControl> _Nullable)control setupBlock:(void (^ _Nullable)(UIViewController <GXWebViewController> * _Nonnull))setupBlock completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)closeFromHandler:(GXActionHandler * _Nullable)handler completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (void)safariViewControllerDidFinish:(SFSafariViewController * _Nonnull)controller;
@end

@class CLLocation;
@protocol MKAnnotation;
@class MKAnnotationView;

@interface GXMKMapView (SWIFT_EXTENSION(GXCoreUI)) <GXMapView>
@property (nonatomic) CGRect frame;
@property (nonatomic, readonly, strong) NSNumber * _Nullable gxMinZoomLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable gxMaxZoomLevel;
- (void)gxSetMinZoomLevel:(float)minZoomLevel;
- (void)gxSetMaxZoomLevel:(float)maxZoomLevel;
- (void)gxClear;
- (void)gxClear:(BOOL)removeAll;
- (CLLocation * _Nullable)gxUserLocation SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <MKAnnotation>> * _Nonnull)gxAnnotations SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <MKAnnotation>> * _Nonnull)gxSelectedAnnotations SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)gxRegionCenter SWIFT_WARN_UNUSED_RESULT;
- (CLLocationDegrees)gxLongitudeDelta SWIFT_WARN_UNUSED_RESULT;
- (CLLocationDegrees)gxLatitudeDelta SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gxIsScrollEnabled SWIFT_WARN_UNUSED_RESULT;
- (void)gxAddAnnotation:(id <MKAnnotation> _Nonnull)annotation SWIFT_DEPRECATED_MSG("", "gxAddAnnotation:isPersistent:");
/// #deprecated: 2022-06-29: trunk; #to-remove: ??
- (void)gxAddAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations SWIFT_DEPRECATED_MSG("", "gxAddAnnotations:arePersistent:");
- (void)gxAddAnnotation:(id <MKAnnotation> _Nonnull)annotation isPersistent:(BOOL)isPersistent;
- (void)gxAddAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations arePersistent:(BOOL)arePersistent;
- (void)gxRemoveAnnotation:(id <MKAnnotation> _Nonnull)annotation;
- (void)gxRemoveAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations;
- (void)gxShowAnnotations:(NSArray<id <MKAnnotation>> * _Nonnull)annotations animated:(BOOL)animated;
- (void)gxDeselectAnnotation:(id <MKAnnotation> _Nullable)annotation animated:(BOOL)animated;
- (void)gxDeselectAnnotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(BOOL)animated;
- (void)gxSetShowsUserLocation:(BOOL)showLocation;
- (void)gxSelectAnnotation:(id <MKAnnotation> _Nonnull)annotation animated:(BOOL)animated;
- (void)gxSelectAnnotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(BOOL)animated;
- (MKAnnotationView * _Nullable)gxViewForAnnotation:(id <MKAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (void)gxSetGXMapType:(GXMapType)gxMapType;
@property (nonatomic, readonly) CGPoint gxMapViewCenter;
- (void)gxSetCenterCoordinate:(CLLocationCoordinate2D)newCenterCoordinate animated:(BOOL)animated;
- (void)gxSetCenterCoordinate:(CLLocationCoordinate2D)newCenterCoordinate withZoomLevel:(float)zoomLevel animated:(BOOL)animated;
- (void)gxSetZoomLevel:(float)zoomLevel animated:(BOOL)animated;
- (float)gxZoomLevel SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)gxConvertPoint:(CGPoint)point toCoordinateFromView:(UIView * _Nonnull)mapView SWIFT_WARN_UNUSED_RESULT;
- (MKMapRect)gxVisibleMapRect SWIFT_WARN_UNUSED_RESULT;
- (void)gxSetVisibleMapRect:(MKMapRect)mapRect edgePadding:(UIEdgeInsets)adjustedMapViewEdgePadding animated:(BOOL)animated;
- (void)gxClearPolylines;
- (id <MKAnnotation> _Nullable)annotationAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GXMessageView (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorViewWithMessage>
- (void)startAnimating;
- (void)stopAnimating;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, copy) NSString * _Nullable messageText;
@end

@class GXWheelValue;
@class GXControlEditableWithLabelBase;
@class GXEntityDataFieldViewControllerHelper;

SWIFT_CLASS("_TtC8GXCoreUI32GXMulticolumnWheelValuesProvider")
@interface GXMulticolumnWheelValuesProvider : NSObject
@property (nonatomic, copy) NSArray<GXWheelValue *> * _Nullable values;
@property (nonatomic, readonly) NSInteger numberOfComponents;
@property (nonatomic, readonly) BOOL hasValues;
@property (nonatomic, readonly, copy) NSString * _Nonnull selectedValueDescription;
- (NSInteger)numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)valueForRow:(NSInteger)row inComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)selectValueAtRow:(NSInteger)row forComponent:(NSInteger)component;
- (void)updateValuesFromControl:(GXControlEditableWithLabelBase * _Nonnull)gxControl;
- (void)updateValuesFromHelper:(GXEntityDataFieldViewControllerHelper * _Nonnull)helper;
- (void)enumerateSelectedRowsInComponents:(SWIFT_NOESCAPE void (^ _Nonnull)(NSInteger, NSInteger))block;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GXPresentationContext (SWIFT_EXTENSION(GXCoreUI))
/// Finds a gx root controller from its presentingController if not nil, or from uiContext otherwise.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end


@interface GXRootControllerHelper (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GXRootControllerInstanceRef _Nullable currentRootController SWIFT_DEPRECATED_MSG("Use UIViewController.gxRootController, GXUserInterfaceContext.gxRootController, GXPresentationContext.gxRootController and GXExecutionEnvironmentHelper instead");)
+ (GXRootControllerInstanceRef _Nullable)currentRootController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8GXCoreUI18GXSegmentedControl")
@interface GXSegmentedControl : UISegmentedControl
@property (nonatomic) BOOL useDefaultCornerRounding;
- (void)layoutSubviews;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithItems:(NSArray * _Nullable)items OBJC_DESIGNATED_INITIALIZER;
@end


@class GXLocalizedImageObject;

@interface GXSegmentedControlItem (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(GXSegmentedControlItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName reloadHandler:(void (^ _Nullable)(GXSegmentedControlItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
@end


@interface GXSegmentedControlItem (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end

@protocol GXControlTextView;
@protocol GXStyleClassWithFont;
@class UIColor;

SWIFT_CLASS_NAMED("GXStyleClassWithFontHelper_Swift")
@interface GXStyleClassWithFontHelper_Swift : NSObject
/// Apply text or attributedText with style class and format.
/// note:
/// textTransform should already be applied to the given text.
+ (void)setText:(NSString * _Nullable)text withStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver textFormat:(GXLayoutControlTextFormat)textFormat toView:(id <GXControlTextView> _Nonnull)view;
/// Apply text or attributedText with style class and format.
/// note:
/// textTransform should already be applied to the given text.
+ (void)setText:(NSString * _Nullable)text withStyleClassWithFont:(id <GXStyleClassWithFont> _Nullable)classWithFont textFormat:(GXLayoutControlTextFormat)textFormat toView:(id <GXControlTextView> _Nonnull)view;
/// Applies gxTextColor from the given styleClass and resolver or fallbackColor to the given view
+ (void)setTextColorWithStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver highlightStyle:(GXHighlightStyleType)highlightStyle fallbackColor:(UIColor * _Nullable (^ _Nullable)(void))fallbackColorResolver onlyIfNonNil:(BOOL)onlyIfNonNil toView:(id <GXControlTextView> _Nonnull)view;
+ (void)setTextColorWithControlDefaultFallbackColor:(id <GXControl> _Nonnull)control onlyIfNonNil:(BOOL)onlyIfNonNil toView:(id <GXControlTextView> _Nonnull)view;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)addDesignSystemTokenGXOptionNamesGXModelObservers;
@end


@protocol GXStyleClassPropertiesOverrides;

@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)applyBackgroundBorderShadowFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nullable)backgroundImageView borderView:(UIView * _Nullable * _Nullable)borderView borderBounds:(CGRect)borderBounds;
+ (void)applyBackgroundBorderShadowFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nullable)backgroundImageView borderView:(UIView * _Nullable * _Nullable)borderView borderBounds:(CGRect)borderBounds applyBackgroundColor:(BOOL)applyBackgroundColor;
+ (void)applyHighligthBackgroundColorFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view highlightedBlock:(BOOL (^ _Nonnull)(void))isHighlighted animated:(BOOL)animated backgroundView:(UIImageView * _Nullable)bgView;
+ (void)applyBackgroundImagesFromStyleClass:(GXStyleClass * _Nullable)styleClass propertiesDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withOverrides:(id <GXStyleClassPropertiesOverrides> _Nullable)classOverrides toView:(UIView * _Nonnull)view backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView;
@end


@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
/// <ul>
///   <li>
///     Applies the background color and background image from the Application style class to the given view
///   </li>
///   <li>
///     Calls applyApplicationBackgroundFromCurrentStyleObject(to: view, modelObject: modelObject, defaultBackgroundColor: nil)
///   </li>
/// </ul>
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view SWIFT_DEPRECATED_MSG("Use applyApplicationBackgroundFromCurrentStyleObject(to:modelObject:) instead");
/// <ul>
///   <li>
///     Applies the background color and background image from the Application style class to the given view
///   </li>
///   <li>
///     If the Application class doesn’t have a background color, the default background color parameter is used if not nil
///   </li>
/// </ul>
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view modelObject:(id <GXModelObject> _Nullable)modelObject withDefaultBackgroundColor:(SWIFT_NOESCAPE UIColor * _Nullable (^ _Nonnull)(void))defBgColor;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyApplicationBackgroundFromCurrentStyleObjectToView:(UIView * _Nonnull)view withDefaultBackgroundColor:(UIColor * _Nullable)defBgColor SWIFT_DEPRECATED_MSG("Use applyApplicationBackgroundFromCurrentStyleObject(to:modelObject:defaultBackgroundColor:) instead");
+ (void)applyBackgroundColor:(UIColor * _Nullable)bgColor toViewControllerIfNeeded:(UIViewController * _Nonnull)controller;
@end


@interface GXStyleHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)applyBackgroundColor:(UIColor * _Nullable)color toView:(UIView * _Nonnull)view oldView:(UIView * _Nonnull)oldView animated:(BOOL)animated;
+ (void)applyBackgroundColor:(UIColor * _Nullable)color toView:(UIView * _Nonnull)view animated:(BOOL)animated;
+ (void)applyHighligth:(BOOL)highlighted animated:(BOOL)animated toBackgroundView:(UIImageView * _Nonnull)bgView;
+ (void)applyHighligthWithBlock:(BOOL (^ _Nonnull)(void))isHighlighted animated:(BOOL)animated toBackgroundView:(UIImageView * _Nonnull)bgView;
+ (void)applyBackgroundImagesToView:(UIView * _Nonnull)parentView backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView backgroundImageName:(NSString * _Nullable)bgImageName highlightedBackgroundImage:(NSString * _Nullable)hBgImageName modelObject:(id <GXModelObject> _Nullable)modelObject backgroundImageMode:(GXBackgroundImageMode)backgroundImageMode;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
+ (void)applyBackgroundImagesToView:(UIView * _Nonnull)parentView backgroundImageView:(UIImageView * _Nullable * _Nonnull)bgImageView backgroundImageName:(NSString * _Nullable)bgImageName highlightedBackgroundImage:(NSString * _Nullable)hBgImageName backgroundImageMode:(GXBackgroundImageMode)backgroundImageMode SWIFT_DEPRECATED_MSG("Use applyBackgroundImages(to:backgroundImageView:backgroundImageName:highlightedBackgroundImage:backgroundImageMode:) instead");
@end



@interface GXThemeHelper (SWIFT_EXTENSION(GXCoreUI))
+ (void)addCustomFontLoadersGXModelObservers;
@end


@interface GXUserInterfaceContext (SWIFT_EXTENSION(GXCoreUI))
/// Finds a valid user interface controller from its userInterfaceContextItems.
@property (nonatomic, readonly, strong) UIViewController * _Nullable userInterfaceController;
/// Finds a valid gx root controller from its userInterfaceContextItems. Consider using userInterfaceController instead.
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end

@class UIBarButtonItem;
@class NSMutableArray;

@interface GXUtilities (SWIFT_EXTENSION(GXCoreUI))
+ (BOOL)contentSizeCategoryIsAccessibilityCategory:(UIContentSizeCategory _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)flexibleSpaceSeparator SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)fixedSpaceSeparator SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)fixedSpaceSeparatorWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
+ (void)addFlexibleSpaceSeparatorBetweenItems:(NSMutableArray * _Nonnull)items;
+ (void)addFlexibleSpaceSeparatorBetweenItems:(NSMutableArray * _Nonnull)items addLeftSeparator:(NSInteger)leftCount addRightSeparator:(NSInteger)rightCount;
@end


@interface GXViewController (SWIFT_EXTENSION(GXCoreUI))
- (void)onDesignSystemTokenOptionChanged;
@end

@class UIWindowScene;

SWIFT_CLASS("_TtC8GXCoreUI8GXWindow")
@interface GXWindow : UIWindow
@property (nonatomic, readonly) BOOL gxPreventLowContrastTintColor;
- (void)tintColorDidChange;
- (void)didAddSubview:(UIView * _Nonnull)subview;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class GXModel;

@interface GXWindow (SWIFT_EXTENSION(GXCoreUI)) <GXModelObject>
@property (nonatomic, readonly, strong) GXModel * _Nullable gxModel;
@end



@class GXEntityDataFieldEditorViewControllerHelper;

SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, strong) GXEntityDataFieldEditorViewControllerHelper * _Nullable editorHelper;
@end


SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXModelObject>
@property (nonatomic, readonly, strong) GXModel * _Nullable gxModel;
@end


SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXEntityDataFieldImagePickerProtocol>
@property (nonatomic) BOOL fieldImagePickerAllowsNull;
- (GXPresentationContext * _Nonnull)newPresentationContextForUserInterfaceContext:(GXUserInterfaceContext * _Nullable)userInterfaceContext SWIFT_WARN_UNUSED_RESULT;
- (void)updatePresentationContext:(GXPresentationContext * _Nonnull)presentationContext;
@end

@protocol GXEntityDataFieldEditorViewControllerDelegate;
@protocol GXEntityData;
@protocol GXEntityDataFieldInfo;
@protocol GXEntityDataFieldViewControllerDelegate;

SWIFT_AVAILABILITY(ios,introduced=14)
@interface PHPickerViewController (SWIFT_EXTENSION(GXCoreUI)) <GXEntityDataFieldEditorViewController>
- (id <GXEntityDataWithOverrideValues> _Nullable)editableEntityDataFieldData SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEditingEntityData SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL shouldDelayEntityDataUpdatesUntilDissmissed;
@property (nonatomic, readonly, strong) id <GXEntityDataFieldEditorViewControllerDelegate> _Nullable entityDataFieldEditorDelegate;
- (BOOL)dismissEntityDataFieldEditorViewController:(BOOL)save animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityData> _Nullable)entityDataFieldData SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityDataFieldDescriptor> _Nonnull)entityDataFieldDescriptor SWIFT_WARN_UNUSED_RESULT;
- (id <GXEntityDataFieldInfo> _Nonnull)resolvedEntityDataFieldInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)entityDataFieldSpecifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nullable)entityDataFieldIndexer SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <GXEntityDataFieldViewControllerDelegate> _Nullable entityDataFieldDelegate;
- (BOOL)dismissEntityDataFieldViewController:(BOOL)animated completion:(void (^ _Nullable)(void))completion SWIFT_WARN_UNUSED_RESULT;
@end

@class NSMutableDictionary;
@class GXThemeClass;

SWIFT_CLASS_NAMED("SwitchThemeClass")
@interface SwitchThemeClass : GXThemeClassBase
+ (UIColor * _Nullable)colorForPropertyName:(GXStyleClassPropertyName _Nonnull)propName fromStyleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWith:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver SWIFT_WARN_UNUSED_RESULT;
+ (NSMutableDictionary * _Nullable)loadClassSpecificPropertiesValuesByName:(NSMutableDictionary * _Nullable)propertyValuesByName fromMetadata:(NSDictionary<NSString *, id> * _Nonnull)metadata forStyleObjectType:(GXObjectType)styleObjectType SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name propertiesValuesByName:(NSDictionary<NSString *, id> * _Nullable)propertiesValuesByName subClasses:(NSArray<GXThemeClass *> * _Nullable)subClasses OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIActivityIndicatorView (SWIFT_EXTENSION(GXCoreUI)) <GXActivityIndicatorView>
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action SWIFT_DEPRECATED_MSG("Use init(gxImageName:modelObject:style:target:action:) instead");
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject style:(UIBarButtonItemStyle)style targetActionBlock:(void (^ _Nonnull)(void))block;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (nonnull instancetype)initWithGXImageName:(NSString * _Nonnull)imageName style:(UIBarButtonItemStyle)style targetActionBlock:(void (^ _Nonnull)(void))block SWIFT_DEPRECATED_MSG("Use init(gxImageName:modelObject:style:targetActionBlock:) instead");
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
+ (UIImage * _Nonnull)gxEmptyBackgroundImage SWIFT_WARN_UNUSED_RESULT;
- (void)gxLoadEmptyBackgroundImage;
- (void)gxLoadEmptyBackBackgroundImage;
@end




@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage isBackButton:(BOOL)isBackButton;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue isBackButton:(BOOL)isBackButton;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName reloadHandler:(void (^ _Nullable)(UIBarButtonItem * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackButtonBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackButtonBackgroundImageNamed:(NSString * _Nonnull)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackButtonBackgroundImageNamed(_:,modelObject:) instead");
@end


@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end



@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (GXImage * _Nullable)imageGxImageFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (GXImage * _Nullable)backgroundGxImageFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage state:(UIControlState)state;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage state:(UIControlState)state;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue state:(UIControlState)state;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue state:(UIControlState)state;
@end



@interface UIButton (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIButton (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:for:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state reloadHandler:(void (^ _Nullable)(UIButton * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:for:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:for:modelObject:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName forState:(UIControlState)state SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:for:modelObject:) instead");
@end


@interface UICollectionViewFlowLayout (SWIFT_EXTENSION(GXCoreUI)) <GXCollectionViewFlowLayout>
@property (nonatomic, readonly) UICollectionViewScrollDirection gxScrollDirection;
@property (nonatomic) CGSize gxItemSize;
@end


@interface UIImage (SWIFT_EXTENSION(GXCoreUI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) GXImageWebCacheTransformImage _Nonnull gxDefaultWebCacheImageTransformWithNonNullGXImage;)
+ (GXImageWebCacheTransformImage _Nonnull)gxDefaultWebCacheImageTransformWithNonNullGXImage SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)applyingDefaultWebCacheImageTransformWithGXImage:(GXImage * _Nonnull)gxImage isEmbededImage:(BOOL)isEmbededImage SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end



@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetPlaceHolderImageAsFinalImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider;
- (void)gxSetPlaceHolderImageAsFinalImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
@end




@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:placeholderImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(UIImage * _Nonnull (^ _Nullable)(UIImage * _Nonnull, GXImage * _Nullable, BOOL, BOOL))transformImage reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName highlightedImageNamed:(NSString * _Nullable)hImageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(UIImage * _Nonnull (^ _Nullable)(UIImage * _Nonnull, GXImage * _Nullable, BOOL, BOOL))transformImage reloadHandler:(GXImageWebCacheUIImageViewHighlightedReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:highlightedImageNamed:modelObject:placeholderImage:reloadHandler:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable imageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable highlightedImageGxImage;
- (void)setImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setHighlightedImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setHighlightedImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end



@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:placeholderImage:transformImage:reloadHandler:options:context:progress:completed) instead");
/// If modelObject == nil, it tries to get the model object using GXStyleClassHelper.modelObjectFromStyleClass(from:resolver:) with the given styleClass and resolver
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue modelObject:(id <GXModelObject> _Nullable)modelObject styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageFromEntityDataFieldValue:(id _Nullable)entityDataFieldValue styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImage(fromEntityDataFieldValue:modelObject:styleClass:resolvingToDefaultWithPropertyResolver:reloadHandler:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:options:progress:completed:) instead");
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetHighlightedImageNamed:(NSString * _Nullable)imageName transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetHighlightedImageNamed(_:modelObject:transformImage:reloadHandler:options:context:progress:completed:) instead");
@end


@interface UIImageView (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:options:progress:completed:) instead");
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName placeholderImage:(GXImageWebCachePlaceholderImageProvider _Nullable)placeholderImageProvider transformImage:(GXImageWebCacheTransformImage _Nullable)transformImage reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler options:(GXWebImageOptions)options context:(NSDictionary<NSString *, id> * _Nullable)context progress:(GXWebImageDownloaderProgressBlock _Nullable)progressBlock completed:(GXWebImageCompletionBlock _Nullable)completedBlock SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:placeholderImage:transformImage:reloadHandler:options:context:progress:completed:) instead");
/// If modelObject == nil, it tries to get the model object using GXStyleClassHelper.modelObjectFromStyleClass(from:resolver:) with the given styleClass and resolver
- (void)gxSetImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetImageNamed:(NSString * _Nullable)imageName styleClass:(GXStyleClass * _Nullable)styleClass resolvingToDefaultWithPropertyResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver reloadHandler:(GXImageWebCacheUIImageViewReloadHandler _Nullable)reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetImageNamed(_:modelObject:styleClass:resolvingToDefaultWithPropertyResolver:reloadHandler:) instead");
@end


@interface UILabel (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UILabel (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end



@interface UINavigationBar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(id <GXModelObject> _Nullable)modelObject modelObject:(void (^ _Nullable)(UINavigationBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(void (^ _Nullable)(UINavigationBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
@end


@interface UINavigationBar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UIPickerView (SWIFT_EXTENSION(GXCoreUI)) <GXInlinePickerView>
@end

@protocol GXStyleClassWithScroll;

@interface UIScrollView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyGxStyleClassWithScroll:(id <GXStyleClassWithScroll> _Nullable)classWithScroll;
- (void)applyGXScrollIndicatorsStyle:(GXScrollIndicatorsStyle)indicatorsStyle;
- (void)applyGXScrollIndicatorsVisibility:(GXScrollIndicatorsVisibility)indicatorsVisibility;
- (void)applyGXScrollBouncingStyle:(GXScrollBouncingStyle)bouncingStyle;
@end


@interface UISearchBar (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end





@interface UITabBar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHanlder SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName reloadHanlder:(void (^ _Nullable)(UITabBar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHanlder SWIFT_DEPRECATED_MSG("Use gxSetSelectionIndicatorImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetSelectionIndicatorImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetSelectionIndicatorImageNamed(_:modelObject:) instead");
@end


@interface UITabBar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
@property (nonatomic, readonly, strong) GXImage * _Nullable selectionIndicatorImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setSelectionIndicatorImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
- (void)setSelectionIndicatorImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UITableViewCell (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UITextField (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UITextField (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end


@interface UITextView (SWIFT_EXTENSION(GXCoreUI)) <GXFlexboxLayoutBaselineDelegate>
- (float)firstBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (float)lastBaselineForFlexForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIToolbar (SWIFT_EXTENSION(GXCoreUI))
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject realodHandler:(void (^ _Nullable)(UIToolbar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName realodHandler:(void (^ _Nullable)(UIToolbar * _Nonnull, GXLocalizedImageObject * _Nonnull))reloadHandler SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:reloadHandler:) instead");
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName modelObject:(id <GXModelObject> _Nullable)modelObject;
/// #deprecated: 2022-01-26: trunk; #to-remove: ??
- (void)gxSetBackgroundImageNamed:(NSString * _Nullable)imageName SWIFT_DEPRECATED_MSG("Use gxSetBackgroundImageNamed(_:modelObject:) instead");
@end


@interface UIToolbar (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) GXImage * _Nullable backgroundImageGxImage;
- (void)setBackgroundImage:(UIImage * _Nullable)newValue forCurrentGxImage:(BOOL)isCurrentGxImage;
- (void)setBackgroundImageForCurrentGxImage:(UIImage * _Nullable)newValue;
@end


@interface UIView (SWIFT_EXTENSION(GXCoreUI))
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)propertyDefaultResolver;
- (void)applyStyleClass:(GXStyleClass * _Nullable)styleClass propertyDefaultResolver:(id <GXStyleClassPropertyDefaultResolver> _Nullable)resolver withFlags:(UIViewThemeFlags)flags;
@end


@interface UIView (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly, strong) UIViewController * _Nullable containerViewControllerFromNextResponder;
@end




@interface UIViewController (SWIFT_EXTENSION(GXCoreUI))
/// Returns its parentViewController if not nil or presentingViewController otherwise
@property (nonatomic, readonly, strong) UIViewController * _Nullable gxParentOrPresentingController;
/// Recursive returns the last (non nil) gxParentOrPresentingController
@property (nonatomic, readonly, strong) UIViewController * _Nonnull gxRootParentOrPresentingController;
/// Returns gxRootParentOrPresentingController as GXRootControllerProtocol
@property (nonatomic, readonly, strong) GXRootControllerInstanceRef _Nullable gxRootController;
@end

@protocol GXApplicationBarsAppearance;

@interface UIViewController (SWIFT_EXTENSION(GXCoreUI))
+ (NSString * _Nullable)classNameForNavigationBarFromAppBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance SWIFT_WARN_UNUSED_RESULT;
+ (UIStatusBarStyle)gxPreferredStatusBarStyleForController:(UIViewController * _Nonnull)controller appBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance unresolvedValue:(UIStatusBarStyle)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (UIStatusBarStyle)gxPreferredStatusBarStyleForControllerWithAppBarAppearance:(UIViewController <GXApplicationBarsAppearance> * _Nonnull)controller unresolvedValue:(UIStatusBarStyle)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)gxPrefersStatusBarHiddenForController:(UIViewController * _Nonnull)controller appBarAppearance:(id <GXApplicationBarsAppearance> _Nonnull)appBarAppearance unresolvedValue:(BOOL)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)gxPrefersStatusBarHiddenForControllerWithAppBarAppearance:(UIViewController <GXApplicationBarsAppearance> * _Nonnull)controller unresolvedValue:(BOOL)unresolvedValue SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIWindow (SWIFT_EXTENSION(GXCoreUI))
@property (nonatomic, readonly) BOOL gxPreventLowContrastTintColor;
- (BOOL)gxShouldPreventLowContrastTintColorForController:(UIViewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gxPreventLowContrastTintColorIfNeededForController:(UIViewController * _Nonnull)controller;
@end


#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
