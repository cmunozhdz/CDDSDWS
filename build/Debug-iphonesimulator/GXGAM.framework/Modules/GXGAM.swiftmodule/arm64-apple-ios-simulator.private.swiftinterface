// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name GXGAM
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AuthenticationServices
import Foundation
import GXCoreBL
import GXDataLayer
import GXFoundation
@_exported import GXGAM
import GXObjectsModel
import GXStandardClasses
import Security
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_hasMissingDesignatedInitializers @objc(AppleIDInformation) public class GXAppleIDInformation : ObjectiveC.NSObject, Foundation.NSCoding {
  @objc public var authorizationCode: Swift.String? {
    get
  }
  @objc public func encode(with coder: Foundation.NSCoder)
  @objc required public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public typealias GXSignInWithAppleCompletionHandler = (GXGAM.GXAppleIDInformation?, Swift.Error?) -> Swift.Void
@_inheritsConvenienceInitializers @objc(GXSignInWithAppleHelper) public class GXSignInWithAppleHelper : ObjectiveC.NSObject {
  @objc public static var isLoginServiceAvailable: Swift.Bool {
    @objc get
  }
  @objc public static func performUserSignIn(withCompletionHandler completionHandler: GXGAM.GXSignInWithAppleCompletionHandler? = nil)
  @objc(deleteAppleIDInformationForUser:) public static func deleteAppleIDInformation(forUser userId: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@available(iOS 13.0, watchOS 6.0, tvOS 13.0, *)
extension GXGAM.GXSignInWithAppleHelper : AuthenticationServices.ASAuthorizationControllerDelegate {
  @objc dynamic public func authorizationController(controller: AuthenticationServices.ASAuthorizationController, didCompleteWithAuthorization authorization: AuthenticationServices.ASAuthorization)
  @objc dynamic public func authorizationController(controller: AuthenticationServices.ASAuthorizationController, didCompleteWithError error: Swift.Error)
}
extension GXGAM.GXEOGAMUserData {
  @objc(attributes) dynamic public var attributes: GXStandardClasses.GXObjectCollection {
    @objc get
    @objc set
  }
}
extension GXGAM.GXEOGAMUserData {
  @objc(country) dynamic public var country: GXGAM.SdtGAMCountry {
    @objc get
    @objc set
  }
}
@_inheritsConvenienceInitializers @objc open class SdtGAMCountry : ObjectiveC.NSObject, Swift.Comparable {
  @objc override dynamic public init()
  @objc deinit
}
public func < (lhs: GXGAM.SdtGAMCountry, rhs: GXGAM.SdtGAMCountry) -> Swift.Bool
public func == (lhs: GXGAM.SdtGAMCountry, rhs: GXGAM.SdtGAMCountry) -> Swift.Bool
@_inheritsConvenienceInitializers @objc(GXEOGAMApplication) public class GXEOGAMApplication : GXStandardClasses.GXExternalObjectBase {
  @objc override dynamic public var externalObjectName: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
extension GXGAM.GXEOGAMApplication {
  @objc(getGUID) dynamic public class func getGUID() -> Swift.String
  @objc(getClientId) dynamic public class func getClientId() -> Swift.String
}
